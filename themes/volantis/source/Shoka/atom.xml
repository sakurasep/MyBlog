<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>九月的生活</title>
  
  <subtitle>New Dream New Start</subtitle>
  <link href="https://cdn.sakurasep.site/Shoka/atom.xml" rel="self"/>
  
  <link href="https://cdn.sakurasep.site/Shoka/"/>
  <updated>2022-06-25T01:07:41.000Z</updated>
  <id>https://cdn.sakurasep.site/Shoka/</id>
  
  <author>
    <name>上杉九月</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo_03-Volantis主题的使用指南(一)</title>
    <link href="https://cdn.sakurasep.site/Shoka/Hexo/Hexo%E7%B3%BB%E5%88%97%20-%20Volantis%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97_03/"/>
    <id>https://cdn.sakurasep.site/Shoka/Hexo/Hexo%E7%B3%BB%E5%88%97%20-%20Volantis%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97_03/</id>
    <published>2022-06-25T01:07:41.000Z</published>
    <updated>2022-06-25T01:07:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>更新中</p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">在上次教程已经完成了基本搭建，本次教程来将主题应用到博客。因为目前很多Hexo主题都处于停更状态，我推荐使用Volantis主题或Butterfly主题。本教程仅介绍Volantis的使用方法。</summary>
    
    
    
    <category term="Hexo系列" scheme="https://cdn.sakurasep.site/Shoka/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://cdn.sakurasep.site/Shoka/tags/Hexo/"/>
    
    <category term="零基础" scheme="https://cdn.sakurasep.site/Shoka/tags/%E9%9B%B6%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hexo_02-博客的配置文件解析</title>
    <link href="https://cdn.sakurasep.site/Shoka/Hexo/Hexo%E7%B3%BB%E5%88%97%20-%20%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90_02/"/>
    <id>https://cdn.sakurasep.site/Shoka/Hexo/Hexo%E7%B3%BB%E5%88%97%20-%20%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90_02/</id>
    <published>2022-04-11T11:20:50.000Z</published>
    <updated>2022-06-25T09:07:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>此文件是对于 Hexo 最基本的修改，在使用主题后，由于主题作者设计的不同，某些设置将不会生效，你只需要填写必要设置，并且按照主题作者的文档进行修改即可。</p><h2 id="site"><a class="anchor" href="#site">#</a> Site</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 网站标题 (必填)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">title</span><span class="token punctuation">:</span> 九月的生活 </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment"># 副标题 (在某些主题不生效)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token key atrule">subtitle</span><span class="token punctuation">:</span> New Dream New Start </pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment"># 网站描述 (建议填写，优化 SEO)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token key atrule">description</span><span class="token punctuation">:</span> 希望在这里分享我的经验与生活！ </pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment"># 网站的关键字 (选填，优化 SEO)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token key atrule">keywords</span><span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment"># 网站作者 (必填)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token key atrule">author</span><span class="token punctuation">:</span> 上杉九月 </pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment"># 网站使用的语言 (取决于你主题目录下的语言文件)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token key atrule">language</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">-</span> zh<span class="token punctuation">-</span>CN</pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">-</span> en</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">-</span> zh<span class="token punctuation">-</span>TW </pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment"># 网站对应的时区 (无需设置)</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token key atrule">timezone</span><span class="token punctuation">:</span> <span class="token string">''</span></pre></td></tr></table></figure><h2 id="url"><a class="anchor" href="#url">#</a> Url</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">## url 这里有个主题分站的玩法，后期会讲到</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment"># 网站网址，如果设置了自定义域名，这里改为自定义的域名 (必填)</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment"># Github: https://Github 用户名.github.io</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment"># Gitee: https://Gitee 仓库路径名.gitee.io</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//sakurasep.gitee.io </pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment"># 文章的永久链接格式 (选择性修改)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>year/<span class="token punctuation">:</span>title/  </pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment"># (无需修改)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token key atrule">permalink_defaults</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token key atrule">pretty_urls</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token key atrule">trailing_index</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> </pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token key atrule">trailing_html</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></pre></td></tr></table></figure><h2 id="directory"><a class="anchor" href="#directory">#</a> Directory</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 以下内容保持默认即可</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">source_dir</span><span class="token punctuation">:</span> source</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key atrule">public_dir</span><span class="token punctuation">:</span> public</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token key atrule">tag_dir</span><span class="token punctuation">:</span> tags</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token key atrule">archive_dir</span><span class="token punctuation">:</span> archives</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token key atrule">category_dir</span><span class="token punctuation">:</span> categories</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token key atrule">code_dir</span><span class="token punctuation">:</span> downloads/code</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token key atrule">i18n_dir</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>lang</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment"># 跳过指定文件的渲染，这里在后期做分站时需要跳过分站的目录，防止二次渲染</span></pre></td></tr><tr><td data-num="10"></td><td><pre>skip_render<span class="token punctuation">:</span></pre></td></tr></table></figure><h2 id="writing"><a class="anchor" href="#writing">#</a> Writing</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 新建文章的默认名称 (无需修改)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">new_post_name</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>title.md </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment"># 预设布局，hexo new 命令可以创建 post,draft,page 三种页面，这里的值为 post，hexo new " 文章名 “ 默认生成的是 post</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token key atrule">default_layout</span><span class="token punctuation">:</span> post</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment"># 将标题转换为首字母大写 (无需修改)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment"># 影响的是 title 属性，后续可以通过安装插件实现该功能，所以此处的设置在某些主题不生效</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token key atrule">titlecase</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment"># 是否在新标签页中打开链接 (按需修改)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token key atrule">external_link</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> </pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token comment"># 仅仅对 post 类型的文章生效</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token key atrule">field</span><span class="token punctuation">:</span> site </pre></td></tr><tr><td data-num="13"></td><td><pre>  <span class="token comment"># 排除的域名</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token key atrule">exclude</span><span class="token punctuation">:</span> <span class="token string">''</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment"># 文件名称转换 0 是不转换 1 小写 2 大写 (无需修改)</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token key atrule">filename_case</span><span class="token punctuation">:</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment"># 是否渲染草稿文件 (无需修改)</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token key atrule">render_drafts</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token comment"># 是否启用资源文件夹 (按需修改)</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token comment"># 开启此选项后在 hexo new 文章时，会创建一个同名文件夹，用于保存你文章中所需资源。不过我建议使用网络图床。</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token comment"># 相对链接 (无需修改)</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token key atrule">relative_link</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token comment"># 是否显示未来的文章 (按需修改)</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token comment"># 如果你文章的时间设置的未来的时间，打开这个即可显示</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token comment"># 这个可以用于定时发布某些文章，建议关闭</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token key atrule">future</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token comment"># 代码块高亮设置 (根据所用主题按需设置)</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token key atrule">highlight</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="30"></td><td><pre>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></pre></td></tr><tr><td data-num="31"></td><td><pre>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></pre></td></tr><tr><td data-num="32"></td><td><pre>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="33"></td><td><pre>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span></pre></td></tr><tr><td data-num="34"></td><td><pre>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></pre></td></tr><tr><td data-num="35"></td><td><pre>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token key atrule">prismjs</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="37"></td><td><pre>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="38"></td><td><pre>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></pre></td></tr><tr><td data-num="39"></td><td><pre>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></pre></td></tr><tr><td data-num="40"></td><td><pre>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span></pre></td></tr></table></figure><h2 id="home-page-setting"><a class="anchor" href="#home-page-setting">#</a> Home page setting</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token key atrule">index_generator</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">''</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token comment"># 每页显示的文章数量 (按需修改)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">7</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token comment"># 文章排序方式，默认最新日期在最前面 (无需修改)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</pre></td></tr></table></figure><h2 id="category-tag"><a class="anchor" href="#category-tag">#</a> Category &amp; Tag</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 以下内容不建议修改</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment"># 默认分类</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key atrule">default_category</span><span class="token punctuation">:</span> uncategorized</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment"># 分类别名</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token key atrule">category_map</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment"># 标签别名</span></pre></td></tr><tr><td data-num="7"></td><td><pre>tag_map<span class="token punctuation">:</span></pre></td></tr></table></figure><h2 id="metadata-elements"><a class="anchor" href="#metadata-elements">#</a> Metadata elements</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 元数据元素 (无需修改)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">meta_generator</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></pre></td></tr></table></figure><h2 id="date-time-format"><a class="anchor" href="#date-time-format">#</a> Date / Time format</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 时间 / 日期格式 (无需修改)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">date_format</span><span class="token punctuation">:</span> YYYY<span class="token punctuation">-</span>MM<span class="token punctuation">-</span>DD</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key atrule">time_format</span><span class="token punctuation">:</span> HH<span class="token punctuation">:</span>mm<span class="token punctuation">:</span>ss</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment"># 文章更新时间格式 (按需修改)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment"># 提供了三个选项 </span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment"># mtime: 将文章修改时间作为文章更新时间</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment"># date: 将文章创建时间作为文章更新时间</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment"># empty: 没有文章更新时间</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token key atrule">updated_option</span><span class="token punctuation">:</span> <span class="token string">'mtime'</span></pre></td></tr></table></figure><h2 id="pagination"><a class="anchor" href="#pagination">#</a> Pagination</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 分页时每页文章数量 设置为 0 不分页 (按需修改)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">7</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key atrule">pagination_dir</span><span class="token punctuation">:</span> page</pre></td></tr></table></figure><h2 id="include-exclude-files"><a class="anchor" href="#include-exclude-files">#</a> Include / Exclude file(s)</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 包括 / 不包括的文件 (无需修改)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">include</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key atrule">exclude</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>ignore<span class="token punctuation">:</span></pre></td></tr></table></figure><h2 id="extensions"><a class="anchor" href="#extensions">#</a> Extensions</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 主题</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment"># 使用的主题名</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key atrule">theme</span><span class="token punctuation">:</span> volantis</pre></td></tr></table></figure><h2 id="deployment"><a class="anchor" href="#deployment">#</a> Deployment</h2><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 部署设置</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token key atrule">deploy</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git</pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token comment"># 仓库地址</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/sakurasep/sakurasep.git</pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token comment"># 仓库分支</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</pre></td></tr></table></figure><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关于我" /></p>]]></content>
    
    
    <summary type="html">本篇文章讲述了`_config.yml`的内容配置</summary>
    
    
    
    <category term="Hexo系列" scheme="https://cdn.sakurasep.site/Shoka/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://cdn.sakurasep.site/Shoka/tags/Hexo/"/>
    
    <category term="零基础" scheme="https://cdn.sakurasep.site/Shoka/tags/%E9%9B%B6%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hexo_01-博客的安装与部署</title>
    <link href="https://cdn.sakurasep.site/Shoka/Hexo/Hexo%E7%B3%BB%E5%88%97%20-%20%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%90%AD%E5%BB%BA_01/"/>
    <id>https://cdn.sakurasep.site/Shoka/Hexo/Hexo%E7%B3%BB%E5%88%97%20-%20%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%90%AD%E5%BB%BA_01/</id>
    <published>2022-04-11T09:55:00.000Z</published>
    <updated>2022-06-25T01:07:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本篇文章最后更新于 2022.06.25 更改了一些遗留问题，更换了下载链接</strong></p><p><strong>最近在尝试新的 markdown 语法格式排版，试试效果如何</strong></p><h2 id="一-软件环境"><a class="anchor" href="#一-软件环境">#</a> 一。软件环境</h2><ul><li>Git</li><li>Node.js</li><li>Clash for Windows (任意加速器，保证能连接到 Github)</li></ul><h3 id="11-git官网"><a class="anchor" href="#11-git官网">#</a> 1.1 <span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">Git 官网</span></h3><p>我们会将搭建好的 Hexo 上传到 Github，所以需要 Git 命令行支持。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/4.jpg" alt="Git官网页面" /></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/5.jpg" alt="根据系统选择64/32位" /></p><h3 id="12-nodejs"><a class="anchor" href="#12-nodejs">#</a> 1.2 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">Node.js</span></h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/6_new.jpg" alt="选择下载LTS版本" /></p><ul><li>如果你的网络无法进行下载，请访问以下链接进行下载：</li></ul><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5zYWt1cmFzZXAuY2x1Yi9zL1lkaUU=">Git - 密码 0625 - 来自上杉九月的网盘分享</span><br /><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5zYWt1cmFzZXAuY2x1Yi9zL2pkSEI="> Node.js - 密码 0625 - 来自上杉九月的网盘分享</span></p><h3 id="13-检查安装是否成功"><a class="anchor" href="#13-检查安装是否成功">#</a> 1.3 检查安装是否成功</h3><p>打开 cmd 命令行，输入 <code>node -v</code>  后显示下图所示，即为安装成功</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/7_new.jpg" alt="显示版本号" /></p><p>在电脑的任意目录点击右键，能够显示 <code>Git Bash Here</code> <br /> 使用这个功能可以更方便的在当前目录启动命令行，当然你也可以使用 cmd 的 cd 命令到当前目录</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/8.jpg" alt="右键菜单出现选项" /></p><h2 id="二-博客本地化部署"><a class="anchor" href="#二-博客本地化部署">#</a> 二。博客本地化部署</h2><h3 id="21-更改npm为cnpm源"><a class="anchor" href="#21-更改npm为cnpm源">#</a> 2.1 更改 npm 为 cnpm 源</h3><p>国内某些网络环境访问 npm 会出现问题，建议使用 taobao 镜像源，能有效减少故障的发生</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/1.jpg" alt="cnpm切换过程" /></p><p>使用 <code>cnpm -v</code>  后正常输出版本号，即为安装成功</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/2.jpg" alt="显示版本号" /></p><h3 id="22-安装hexo命令行"><a class="anchor" href="#22-安装hexo命令行">#</a> 2.2 安装 hexo 命令行</h3><p><code>-g</code>  是对全局安装 hexo 命令行</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>cnpm <span class="token function">install</span> hexo-cli -g</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/3.jpg" alt="hexo-cli安装过程" /></p><h3 id="23-hexo博客初始化"><a class="anchor" href="#23-hexo博客初始化">#</a> 2.3 Hexo 博客初始化</h3><p>选取一个想要安装 Hexo 的目录，路径中最好不要含有中文，后续会更好处理</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>hexo init</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/9_new.jpg" alt="初始化过程" /></p><p>此时文件夹内应有初始化文件，不过只要接下来能够成功运行，上述过程没有报错，就没问题。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/10_new.jpg" alt="hexo文件夹结构" /></p><p>如果初始化出现问题，即在运行 <code>hexo init</code>  的时候报错 (通常是由于网络而出现问题)</p><blockquote><p>如果出现网络问题导致无法下载，请访问以下链接获取基础包：</p></blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5zYWt1cmFzZXAuY2x1Yi9zL05vdXk=">Hexo_基础包文件 - 密码 0625 - 来自上杉九月的网盘分享</span></p><h3 id="24-运行博客"><a class="anchor" href="#24-运行博客">#</a> 2.4 运行博客</h3><p>在博客根目录右键打开 <code>Git Bash Here</code></p><p>输入以下指令</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s</pre></td></tr></table></figure><blockquote><p>hexo clean 清除已经部署的网页静态文件<br /> hexo g 编译当前博客<br /> hexo s 启动本地服务器</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/11.jpg" alt="本地部署过程" /></p><p>出现 <code>Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</code> ，并且没有后续的警告语句，说明部署成功，在浏览器中输入 <code>localhost:4000</code>  查看部署效果。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/12.jpg" alt="运行成功" /></p><blockquote><p>如果你的端口 4000 被占用，可以使用 hexo s -p 端口号。然后访问 <code>http://localhost:端口号</code></p></blockquote><p>以上，博客的最基本的本地化部署已经完成，接下来的内容是将博客部署到网络进行在线访问。</p><h2 id="三-博客部署到网络"><a class="anchor" href="#三-博客部署到网络">#</a> 三。博客部署到网络</h2><p>基本介绍一下目前不同部署方式的差别。</p><p>Github：微软旗下的开源代码托管平台，国内某些运营商可能无法访问，一般来说还是推荐部署在 Github Pages，这也是我本人目前主要用的服务。</p><p>Gitee：虽然是国内的代码托管平台，访问速度可以保证，但是它的 Pages 页面需要手动更新，并且不能够绑定自定义的域名 (如果你想和别的博主交换友链，最好还是要有一个域名。因为一般有域名的博客更有动力维护下去)。</p><p>Coding：部署方式很复杂，新版的 Coding Pages 貌似是和腾讯云挂钩，按量付费，感觉没必要了。</p><p>Vercel：是一个静态网页部署平台，好像访问速度要比 Github 稍微快一些，并且提供修改自定义域名。</p><p>云服务器：访问速度很大程度上取决于你的服务器的带宽，而且现在服务器的价格也不便宜，以后部署其他需要服务器的项目时再使用比较好。</p><h3 id="31-部署到github推荐"><a class="anchor" href="#31-部署到github推荐">#</a> 3.1 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLw==">部署到 Github (推荐)</span></h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/13.jpg" alt="全球最大同性社交平台" /></p><h4 id="311-创建github仓库"><a class="anchor" href="#311-创建github仓库">#</a> 3.1.1 创建 Github 仓库</h4><p>注册完成 Github 账号，新建仓库用于保存上传博客代码。</p><blockquote><p>Github 账号注册时尽量不要使用国内邮箱，尤其是 QQ 邮箱</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/14.jpg" alt="新建仓库" /></p><blockquote><p>这里我已经存在该仓库，所以会爆红<br /> Tips: 试试新建一个仓库名为你 Github 用户名的仓库</p></blockquote><p>按照图示修改好仓库名后，确保仓库为公开 (Public)，其他设置按需更改，创建仓库。</p><h4 id="312-获取与github的连接"><a class="anchor" href="#312-获取与github的连接">#</a> 3.1.2 获取与 Github 的连接</h4><p>在任意位置打开 <code>Git Bash Here</code> ，输入以下指令</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">git</span> config --global user.name <span class="token string">"你的GitHub用户名"</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">git</span> config --global user.email <span class="token string">"你的GitHub注册邮箱"</span></pre></td></tr><tr><td data-num="3"></td><td><pre>ssh-keygen -t rsa -C <span class="token string">"你的GitHub注册邮箱"</span></pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/15.jpg" alt="生成密钥" /></p><p>输入第三个命令后只需要连续按下三次回车，就会在 <code>C:\Users\用户名\.ssh</code>  中生成密钥文件</p><p>打开 <code>id_rsa.pub</code> ，复制文件内容，添加到</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/17.jpg" alt="添加SSH公钥" /></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/18.jpg" alt="添加SSH公钥" /></p><p>然后在 <code>Git Bash</code>  中输入以下命令测试是否连通 Github</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">ssh</span> -T git@github.com</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/19.jpg" alt="成功连通" /></p><h4 id="313-上传博客到github"><a class="anchor" href="#313-上传博客到github">#</a> 3.1.3 上传博客到 Github</h4><p>首先在 <code>Git Bash</code>  中输入以下命令安装部署插件</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>cnpm <span class="token function">install</span> hexo-deployer-git --save</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/20.jpg" alt="安装成功" /></p><p>打开根目录下的 <code>_config.yml</code>  文件</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/21.jpg" alt="deploy配置" /></p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># Deployment</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">## Docs: https://hexo.io/docs/one-command-deployment</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key atrule">deploy</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git</pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> 填入仓库连接</pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</pre></td></tr></table></figure><p>repo 可以复制此处的链接</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/22.jpg" alt="复制仓库链接" /></p><p>填好后在 <code>Git Bash</code>  中输入下列命令部署到 Github 仓库</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/23.jpg" alt="Github同理(此为部署到Gitee)" /></p><p>此时访问 <code>https://Github用户名.github.io</code>  即可访问</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/24.jpg" alt="Github显示效果相同" /></p><h4 id="314-绑定自定义域名"><a class="anchor" href="#314-绑定自定义域名">#</a> 3.1.4 绑定自定义域名</h4><p>你可以自行选择域名提供商，购买完域名后，在域名解析里设置以下解析记录</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/33.jpg" alt="标准解析设置" /></p><ul><li><p>主机记录：设置为 <code>@</code> 为泛解析，即访问域名为 <code>https://域名</code> 。如果想要设置为二级域名，请将主机记录设置为想要设置的名称，比如主机记录设置为 <code>hexo</code> ，即访问域名为 <code>https://hexo.域名</code></p></li><li><p>记录类型：设置为 CNAME，将域名解析到网址。因为 Github 建议将自定义域名以 CNAME 解析到 <code>Github用户名.github.io</code></p></li></ul><p>然后在 <code>_config.yml</code>  中设置 url 为你解析的域名</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/34.jpg" alt="url设置" /></p><p>最后再 <code>博客根目录/source</code>  下新建 CNAME 文件</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/36.jpg" alt="注意，没有拓展名!" /></p><p>文件内容为自定义的域名</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/35.jpg" alt="用于Github识别项目的自定义地址" /></p><h3 id="32-部署到gitee备用方法"><a class="anchor" href="#32-部署到gitee备用方法">#</a> 3.2 <span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20v">部署到 Gitee (备用方法)</span></h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/25.jpg" alt="Gitee官网" /></p><h4 id="321-创建gitee仓库"><a class="anchor" href="#321-创建gitee仓库">#</a> 3.2.1  创建 Gitee 仓库</h4><p>部署到 Gitee 与部署到 Github 的流程相差很小，看一个就行。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/26.jpg" alt="新建Gitee仓库" /></p><h4 id="322-获取与gitee的连接"><a class="anchor" href="#322-获取与gitee的连接">#</a> 3.2.2 获取与 Gitee 的连接</h4><p>在任意位置打开 <code>Git Bash Here</code> ，输入以下指令</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">git</span> config --global user.name <span class="token string">"你的Gitee用户名"</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">git</span> config --global user.email <span class="token string">"你的Gitee注册邮箱"</span></pre></td></tr><tr><td data-num="3"></td><td><pre>ssh-keygen -t rsa -C <span class="token string">"你的Gitee注册邮箱"</span></pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/15.jpg" alt="获取SSH公钥" /></p><p>输入第三个命令后只需要连续按下三次回车，就会在 <code>C:\Users\用户名\.ssh</code>  中生成密钥文件</p><p>打开 <code>id_rsa.pub</code> ，复制文件内容，添加到</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/27.jpg" alt="添加SSH公钥" /></p><p>然后在 <code>Git Bash</code>  中输入以下命令测试是否连通 Gitee</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">ssh</span> -T git@gitee.com</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/28.jpg" alt="连接成功" /></p><h4 id="323-上传博客到gitee"><a class="anchor" href="#323-上传博客到gitee">#</a> 3.2.3  上传博客到 Gitee</h4><p>首先在 <code>Git Bash</code>  中输入以下命令安装部署插件</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>cnpm <span class="token function">install</span> hexo-deployer-git --save</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/20.jpg" alt="安装过程" /></p><p>打开根目录下的 <code>_config.yml</code>  文件</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/29.jpg" alt="Gitee配置" /></p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># Deployment</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">## Docs: https://hexo.io/docs/one-command-deployment</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token key atrule">deploy</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git</pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> 填入仓库连接</pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</pre></td></tr></table></figure><p>repo 可以复制此处的链接</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/30.jpg" alt="复制仓库链接" /></p><p>填好后在 <code>Git Bash</code>  中输入下列命令部署到 Gitee 仓库</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d</pre></td></tr></table></figure><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/23.jpg" alt="上传成功" /></p><p>在仓库的 <code>服务-Gitee Pages</code>  进行手动部署</p><blockquote><p>Github Pages 会自动使用你仓库的代码进行部署，而 Gitee 需要你手动更新。</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/31.jpg" alt="手动更新Pages" /></p><p>打开 <code>强制使用Https</code> ，更新部署</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/32.jpg" alt="更新" /></p><p>等待部署结束后，访问 <code>Https://Gitee用户名.gitee.io</code>  查看部署结果</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/hexo/24.jpg" alt="部署完成" /></p><h3 id="33-部署到vercel"><a class="anchor" href="#33-部署到vercel">#</a> 3.3 <span class="exturl" data-url="aHR0cHM6Ly92ZXJjZWwuY29tLw==">部署到 Vercel</span></h3><p>请在看过 3.1 部署到 Github 后再观看本部分教程。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/37.jpg" alt="官网" /></p><h4 id="331-连接github仓库"><a class="anchor" href="#331-连接github仓库">#</a> 3.3.1 连接 Github 仓库</h4><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/38.jpg" alt="连接仓库" /></p><blockquote><p>项目名只能使用小写英文，无法使用大写英文，会报错</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/39.jpg" alt="基本设置" /></p><p>稍等一段时间后，Vercel 便部署完成了你的博客</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/40.jpg" alt="部署完成" /></p><p>Vercel 默认提供了域名，你也可以更改。<br />到 <code>Settings-Domains</code>  中进行更改</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/41.jpg" alt="更改域名" /></p><h2 id="写在最后"><a class="anchor" href="#写在最后">#</a> 写在最后</h2><p>本篇文章基本讲述了 Hexo 博客的基本部署，包括了本地化部署测试和上传到 Github，Gitee 或是 Vercel 等平台，使用托管平台提供的 Page 服务进行远程访问。</p><p>本篇教程属于面向与小白的零基础教程系列，如果在安装过程中出现任何问题，你可以在评论区提问，你的提问也是我充实文章的助力！</p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">本篇文章，将会从Hexo博客的基本搭建，以及如何将你的博客部署到网络进行访问。</summary>
    
    
    
    <category term="Hexo系列" scheme="https://cdn.sakurasep.site/Shoka/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://cdn.sakurasep.site/Shoka/tags/Hexo/"/>
    
    <category term="零基础" scheme="https://cdn.sakurasep.site/Shoka/tags/%E9%9B%B6%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>我的2021年度总结</title>
    <link href="https://cdn.sakurasep.site/Shoka/Year/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%20-%202021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>https://cdn.sakurasep.site/Shoka/Year/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%20-%202021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2022-01-16T14:13:22.000Z</published>
    <updated>2022-06-29T04:24:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><p>2021 年，我对自己算是一半满意，一半不满意吧，有些事情不尽如人意，有些事情自己做的很好，希望在 2022 年我能够有所进步。</p><p>本文中所有内容截止于 2022.1.1</p><p><strong>New Dream New Start</strong></p><p>这次的年终总结并不是按阶段划分的，而是分成了两个部分。</p><p>第一部分是对 2021 年全年的回顾，自己做了什么，还有什么需要改进的地方。</p><p>第二部分是对 2022 年的一个总体的规划，新的一年我应该向什么方向努力。</p><h2 id="第一部分-我的2021"><a class="anchor" href="#第一部分-我的2021">#</a> 第一部分 我的 2021</h2><p>对于我来说，2021 年研究了很多网站搭建的内容，熟练的掌握云服务器的各种应用方式，接下来就让我一一给各位梳理一下。</p><h3 id="hexo博客"><a class="anchor" href="#hexo博客">#</a> Hexo 博客</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlLw==">上杉九月的博客</span></p><h4 id="图片介绍"><a class="anchor" href="#图片介绍">#</a> 图片介绍</h4><blockquote><p>首页图</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/1.jpg" alt="首页图" /></p><blockquote><p>主页信息流</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/3.jpg" alt="主页" /></p><blockquote><p>文章阅读</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/2.jpg" alt="文章内容" /></p><h4 id="简介"><a class="anchor" href="#简介">#</a> 简介</h4><blockquote><p>使用 Hexo 博客框架 + Github Pages</p></blockquote><p>Hexo 作为目前活跃度较高的博客框架，主题丰富，功能齐全，个人是十分喜欢由 Hexo 框架生成的静态博客，Github Pages 的访问速度还是可以的，而且如果担心访问速度的话也可以将博客部署到 Gitee。</p><blockquote><p>主题使用了<span class="exturl" data-url="aHR0cHM6Ly92b2xhbnRpcy5qcy5vcmcv"> Volantis 5.0 Beta</span> 美化思路参考<span class="exturl" data-url="aHR0cHM6Ly9pbmtzcy5jbi8=">枋柚梓的猫会发光 (inkss.cn)</span></p></blockquote><p>Volantis 算是一个不错的博客主题，属于是上限高，下限也高，新手通过 Volantis 官方文档也能配置完成一个不错的页面，而如果想更进一步，Volantis 官方还收录了很多大佬的美化教程，可以进行参考。</p><blockquote><p>该博客内容主攻计算机相关内容</p></blockquote><p>由于是静态博客，写作相比于其他博客框架稍微有些繁琐，不适合日常更新。（不过有大佬写的 HPP 组件看起来还不错，等完善）。我在新的一年保证文章更新的情况下也会记录一下自己的其他方面的内容，放到博客分站吧。</p><blockquote><p>还有些正在调试的内容</p></blockquote><p>Hexo 是支持分站的，即可以将其他 Hexo 主题作为主站点的其他访问风格，目前还在做主站的调试，等主站稳定了把分站会恢复的。</p><h3 id="halo博客"><a class="anchor" href="#halo博客">#</a> Halo 博客</h3><p><span class="exturl" data-url="aHR0cHM6Ly9oYWxvLnNha3VyYXNlcC5jbHViLw==">上杉九月的生活博客</span></p><h4 id="图片介绍-2"><a class="anchor" href="#图片介绍-2">#</a> 图片介绍</h4><blockquote><p>首页图</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/4.jpg" alt="首页" /></p><blockquote><p>主页信息流</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/5.jpg" alt="主页" /></p><blockquote><p>文章阅读</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/6.jpg" alt="内容" /></p><h4 id="简介-2"><a class="anchor" href="#简介-2">#</a> 简介</h4><p>网站还处于调试期，打算把其他内容放在这里更新。</p><blockquote><p>网站是由<span class="exturl" data-url="aHR0cHM6Ly9oYWxvLnJ1bi8="> Halo 博客框架</span>搭建</p></blockquote><p>Halo 博客框架属于是动态部署的博客类型，需要依托于 Java 环境。我把该博客部署在腾讯云上。</p><p>主题使用的是<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xJbEdHL2hhbG8tdGhlbWUtc2FrdXJh"> GitHub - LIlGG/halo-theme-sakura: Halo 版本的樱花🌸主题</span></p><h3 id="typecho博客"><a class="anchor" href="#typecho博客">#</a> Typecho 博客</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5jbHViLw==">上杉九月的综合博客</span></p><h4 id="图片介绍-3"><a class="anchor" href="#图片介绍-3">#</a> 图片介绍</h4><blockquote><p>首页图</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/7.jpg" alt="首页" /></p><blockquote><p>文章阅读</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/8.jpg" alt="内容" /></p><h4 id="简介-3"><a class="anchor" href="#简介-3">#</a> 简介</h4><p>Typecho 是我最喜欢的博客框架之一，响应速度快，写作方便。</p><p>不过 Typecho 也有它的缺点，就是很多插件已经不更新了。</p><p>Typecho 的主题很多是需要付费的，当然也有免费的主题。这里我使用的是<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnp3eWluZy5jb20v">秦枫鸢梦 - 🌸花有重开日，人无再少年🏃‍♂️ (zwying.com)</span></p><h2 id="chevereto图片站"><a class="anchor" href="#chevereto图片站">#</a> Chevereto 图片站</h2><p><span class="exturl" data-url="aHR0cHM6Ly9waWMuc2FrdXJhc2VwLnRvcC8=">上杉九月的图片站</span></p><h4 id="图片介绍-4"><a class="anchor" href="#图片介绍-4">#</a> 图片介绍</h4><blockquote><p>首页</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/9.jpg" alt="首页" /></p><blockquote><p>图片浏览</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2021/10.jpg" alt="图片展示" /></p><h4 id="简介-4"><a class="anchor" href="#简介-4">#</a> 简介</h4><p>图片站在去年年底就进入测试阶段，年初开始稳定运行。属于我这些网站中运行最为稳定的一个。。。</p><p>图片站可以注册（目前仅为邀请码开放，如果想上传图片的话，可以评论区留言邮箱，私发邀请码）</p><p>小服务器，空间不大，带宽不大，没法做到开放注册。</p><p>当然如果只是浏览和下载还是完全开放的。</p><p><strong>图片链接是无法进行引用的，网站开启了防盗链</strong></p><h2 id="第二部分-我的2022"><a class="anchor" href="#第二部分-我的2022">#</a> 第二部分 我的 2022</h2><p>去年对于我来说，其实是荒废了很多时间。</p><p>直到年底的几个月才认清了方向，明确了自己的未来的道路。</p><h3 id="第一件事健康的身体"><a class="anchor" href="#第一件事健康的身体">#</a> 第一件事：健康的身体</h3><p>185cm 的高个子 87KG 的体重，BMI 是稍微超标的。</p><p>对于我来说，身体长时间处于一个亚健康状态，精神支撑不了我去干一些事情，容易累，嗜睡。</p><blockquote><p>第一件事 BMI 回归正常水平，适当的增加肌肉</p></blockquote><h3 id="第二件事英语"><a class="anchor" href="#第二件事英语">#</a> 第二件事：英语</h3><blockquote><p>第二件事 2022 年的两场考试，争取一遍过四级和六级</p></blockquote><h3 id="第三件事考研"><a class="anchor" href="#第三件事考研">#</a> 第三件事：考研</h3><blockquote><p>第三件事 2022 年的两场考试，准备考研相关内容</p></blockquote><h3 id="第四件事专业水平"><a class="anchor" href="#第四件事专业水平">#</a> 第四件事：专业水平</h3><blockquote><p>第四件事 2022 年的两场考试，全面提高自己的代码能力</p></blockquote><h3 id="第五件事文章更新"><a class="anchor" href="#第五件事文章更新">#</a> 第五件事：文章更新</h3><blockquote><p>第五件事 2022 年的两场考试，持续产出高质量文章</p></blockquote><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">回顾一下我的2021</summary>
    
    
    
    <category term="年度总结" scheme="https://cdn.sakurasep.site/Shoka/categories/Year/"/>
    
    
    <category term="年度总结" scheme="https://cdn.sakurasep.site/Shoka/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>《CTF学习笔记》</title>
    <link href="https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20CTF(Crypto)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20CTF(Crypto)%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-11-15T13:32:12.000Z</published>
    <updated>2022-06-29T02:55:48.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><p>最近一位朋友入坑 CTF，想起来开学还加了一个相关社团参加了几场比赛。还是挺有趣的。</p><p>每天做上一两个，就当是放松了。</p><h2 id="正文"><a class="anchor" href="#正文">#</a> 正文</h2><h2 id="buuctf在线评测-buuojcn-md5"><a class="anchor" href="#buuctf在线评测-buuojcn-md5">#</a> <span class="exturl" data-url="aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzI01ENQ==">BUUCTF 在线评测 (buuoj.cn) -- MD5</span></h2><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/CTF_Crypto/1.png" alt="题目" /></p><h3 id="题目"><a class="anchor" href="#题目">#</a> 题目</h3><p>e00cf25ad42683b3df678c61f42c6bda</p><h3 id="解法"><a class="anchor" href="#解法">#</a> 解法</h3><p>题目写的很清楚 MD5，然后给出的这一端字符串（用多了能看出来很像 MD5）</p><p>扔到 **<span class="exturl" data-url="aHR0cHM6Ly93d3cuY21kNS5jb20v">MD5 解密网站</span> ** 得到 <code>flag&#123;admin1&#125;</code></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/CTF_Crypto/2.png" alt="解密网站" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/CTF_Crypto/3.png" alt="PASS" /></p><h2 id="buuctf在线评测-buuojcn-一眼就解密"><a class="anchor" href="#buuctf在线评测-buuojcn-一眼就解密">#</a> <span class="exturl" data-url="aHR0cHM6Ly9idXVvai5jbi9jaGFsbGVuZ2VzIyVFNCVCOCU4MCVFNyU5QyVCQyVFNSVCMCVCMSVFOCVBNyVBMyVFNSVBRiU4Ng==">BUUCTF 在线评测 (buuoj.cn) -- 一眼就解密</span></h2><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/CTF_Crypto/4.png" alt="题目" /></p><h2 id="题目-2"><a class="anchor" href="#题目-2">#</a> 题目</h2><p>flag：ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30=</p><h2 id="解法-2"><a class="anchor" href="#解法-2">#</a> 解法</h2><p>Base64 编码有个特点，编码末尾会出现 <code>=</code></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/CTF_Crypto/5.png" alt="特点" /></p><p>所以说仍然是放到 **<span class="exturl" data-url="aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvYmFzZTY0Lmh0bQ==">Base64 解密网站</span> **</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/CTF_Crypto/6.png" alt="解密得到" /></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/CTF_Crypto/7.png" alt="PASS" /></p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">CTF还是挺有趣的，每天都做一做当作放松吧</summary>
    
    
    
    <category term="学习笔记" scheme="https://cdn.sakurasep.site/Shoka/categories/Study/"/>
    
    
    <category term="CTF" scheme="https://cdn.sakurasep.site/Shoka/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>《学习笔记》</title>
    <link href="https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-09-24T13:17:29.000Z</published>
    <updated>2022-06-29T02:57:24.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><p>要填的坑挺多的，精力有限，目前先集中更新本篇文章。</p><p>本篇文章参考书籍为 **《洛谷 - 深入浅出程序设计竞赛》**</p><h2 id="1-p3156-深基15例1询问学号-洛谷-入门"><a class="anchor" href="#1-p3156-深基15例1询问学号-洛谷-入门">#</a> 1. <span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDMxNTY=">P3156 【深基 15. 例 1】询问学号 - 洛谷 - 入门</span></h2><h2 id="题目描述"><a class="anchor" href="#题目描述">#</a> 题目描述</h2><p>有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≤</mo><mn>2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n \le 2 \times 10^6)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 名同学陆陆续续进入教室。我们知道每名同学的学号（在 1 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span> 之间），按进教室的顺序给出。上课了，老师想知道第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个进入教室的同学的学号是什么（最先进入教室的同学 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>），询问次数不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span> 次。</p><h2 id="输入格式"><a class="anchor" href="#输入格式">#</a> 输入格式</h2><p>第一行 2 个整数 n 和 m，表示学生个数和询问次数。</p><p>第二行 n 个整数，表示按顺序进入教室的学号。</p><p>第三行 m 个整数，表示询问第几个进入教室的同学。</p><h2 id="输出格式"><a class="anchor" href="#输出格式">#</a> 输出格式</h2><p>m 个整数表示答案，用换行隔开。</p><h2 id="样例"><a class="anchor" href="#样例">#</a> 样例</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>输入：</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">10</span> <span class="token number">3</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">1</span> <span class="token number">9</span> <span class="token number">2</span> <span class="token number">60</span> <span class="token number">8</span> <span class="token number">17</span> <span class="token number">11</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">14</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span> <span class="token number">5</span> <span class="token number">9</span></pre></td></tr><tr><td data-num="5"></td><td><pre>输出：</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">1</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">8</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">5</span></pre></td></tr></table></figure><h2 id="思路和知识点"><a class="anchor" href="#思路和知识点">#</a> 思路和知识点</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>vector基本用法</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1.</span> vector <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">array</span> <span class="token punctuation">(</span>N<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> 新建一个初始长度为N，N个数据为i的vector数组</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2.</span> array<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> 将a元素添加到数组array的末尾，并增加数组长度</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3.</span> array<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 返回数组的长度</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">4.</span> array<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span> 重新将数组长度设置为n，若原数组比n长，则删除多余元素，若短，新增加的数组初始化为m</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">5.</span> array<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 返回array数组的首元素，也就是array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>的指针</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">6.</span> array<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 返回array数组末尾下一个元素的指针</pre></td></tr></table></figure><h2 id="ac代码"><a class="anchor" href="#ac代码">#</a> AC 代码</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector></span> </span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    vector <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> student<span class="token punctuation">;</span> <span class="token comment">// 创建 vector 数组</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    cin<span class="token operator">>></span>n<span class="token operator">>></span>m<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        cin<span class="token operator">>></span>temp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        student<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将 temp 压入动态 vector 数组的末尾，并且 vector 数组的长度 + 1</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        cin<span class="token operator">>></span>temp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span>student<span class="token punctuation">[</span>temp <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span><span class="token comment">// 数组一般是从 0 开始存储数据，而我们询问学号是从 1 开始寻找</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><h2 id="2-p3613-深基15例2寄包柜-洛谷-普及"><a class="anchor" href="#2-p3613-深基15例2寄包柜-洛谷-普及">#</a> 2. <span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM2MTM=">P3613 【深基 15. 例 2】寄包柜 - 洛谷 - 普及 </span></h2><h2 id="题目描述-2"><a class="anchor" href="#题目描述-2">#</a> 题目描述</h2><p>超市里有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n(n\le10^5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 个寄包柜。每个寄包柜格子数量不一，第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个寄包柜有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_i(a_i\le10^5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 个格子，不过我们并不知道各个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的值。对于每个寄包柜，格子编号从 1 开始，一直到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。现在有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>q</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(q\le10^5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 次操作：</p><ul><li><code>1 i j k</code> ：在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个柜子的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个格子存入物品 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(0\le k\le 10^9)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时说明清空该格子。</li><li><code>2 i j</code> ：查询第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个柜子的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个格子中的物品是什么，保证查询的柜子有存过东西。</li></ul><p>已知超市里共计不会超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup></mrow><annotation encoding="application/x-tex">10^7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span> 个寄包格子，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是确定然而未知的，但是保证一定不小于该柜子存物品请求的格子编号的最大值。当然也有可能某些寄包柜中一个格子都没有。</p><h2 id="输入格式-2"><a class="anchor" href="#输入格式-2">#</a> 输入格式</h2><p>第一行 2 个整数 n 和 q，寄包柜个数和询问次数。</p><p>接下来 q 个整数，表示一次操作。</p><h2 id="输出格式-2"><a class="anchor" href="#输出格式-2">#</a> 输出格式</h2><p>对于查询操作时，输出答案。</p><h2 id="样例-2"><a class="anchor" href="#样例-2">#</a> 样例</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>输入：</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">5</span> <span class="token number">4</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">1</span> <span class="token number">3</span> <span class="token number">10000</span> <span class="token number">114514</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span> <span class="token number">3</span> <span class="token number">10000</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">2</span> <span class="token number">1</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="7"></td><td><pre>输出：</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">114514</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">1</span></pre></td></tr></table></figure><h2 id="思路和知识点-2"><a class="anchor" href="#思路和知识点-2">#</a> 思路和知识点</h2><p><a href="#%E6%80%9D%E8%B7%AF%E5%92%8C%E7%9F%A5%E8%AF%86%E7%82%B9">vector 相关操作</a></p><p>注意 此题的数据范围是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>, 如果开一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span> * <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span> 的二维数组，空间占用将会十分离谱</p><p>所以此类题目使用 vector 便可以最大程度的减少空间的占用</p><h2 id="ac代码-2"><a class="anchor" href="#ac代码-2">#</a> AC 代码</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">int</span> n<span class="token punctuation">,</span> q<span class="token punctuation">,</span> op<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    cin<span class="token operator">>></span>n<span class="token operator">>></span>q<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    vector <span class="token operator">&lt;</span> vector <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token operator">></span> <span class="token function">block</span> <span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 此时仅仅是开了一个长度为 n 的一维数组</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> count <span class="token operator">&lt;</span> q<span class="token punctuation">;</span> count<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        cin<span class="token operator">>></span>op<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            cin<span class="token operator">>></span>i<span class="token operator">>></span>j<span class="token operator">>></span>k<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>block<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">// 如果柜子里格子不足，那么就扩展第 i 个柜子的格子到 j + 1</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                block<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>            block<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> k<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token keyword">else</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            cin<span class="token operator">>></span>i<span class="token operator">>></span>j<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span>block<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><h2 id="3-手写栈的操作"><a class="anchor" href="#3-手写栈的操作">#</a> 3. <span class="exturl" data-url="YWJvdXQ6Ymxhbms=">手写栈的操作</span></h2><h2 id="题目描述-3"><a class="anchor" href="#题目描述-3">#</a> 题目描述</h2><p>栈作为一个先进先出的数据结构，尽管 &lt;stack&gt; 头文件已经提供了现成的关于栈的操作</p><p>但是在 STL 里面，使用这些操作而不使用 O2 优化</p><p>会导致程序有一点点慢</p><h2 id="思路和知识点-3"><a class="anchor" href="#思路和知识点-3">#</a> 思路和知识点</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>C语言提供了栈的相关快捷操作<span class="token operator">&lt;</span>stack<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1.</span> stack <span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> s<span class="token punctuation">;</span> 新建一个栈</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2.</span> s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> 将元素a压入栈</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3.</span> s<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 将s的栈顶元素弹出</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">4.</span> s<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 查询s的栈顶元素</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">5.</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 查询s的元素个数</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">6.</span> s<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 查询s是否为空</pre></td></tr></table></figure><h2 id="手写栈模板请根据实际情况进行修改"><a class="anchor" href="#手写栈模板请根据实际情况进行修改">#</a> 手写栈模板 (请根据实际情况进行修改)</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">int</span> stack<span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// 指针，指向的是下一个栈元素</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token comment">// 压栈操作</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    stack<span class="token punctuation">[</span>p<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">void</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 弹出栈顶元素</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    stack<span class="token punctuation">[</span><span class="token operator">--</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">int</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 查询栈顶元素</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">return</span> stack<span class="token punctuation">[</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><h2 id="4-uva673-平衡的括号-parentheses-balance-洛谷-普及"><a class="anchor" href="#4-uva673-平衡的括号-parentheses-balance-洛谷-普及">#</a> 4. <span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vVVZBNjcz">UVA673 平衡的括号 Parentheses Balance - 洛谷 - 普及 </span></h2><h2 id="题目描述-4"><a class="anchor" href="#题目描述-4">#</a> 题目描述</h2><p>输入一个包含 “()” 和 “[]” 的括号序列，判断是否合法。<br />具体规则：</p><ol><li>空串合法；</li><li>如果 A 和 B 合法，那么 AB 合法；</li><li>如果 A 合法 (A) 和 [A] 都合法</li></ol><p>感谢 @陶文祥  提供的翻译。</p><h2 id="样例-3"><a class="anchor" href="#样例-3">#</a> 样例</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>输入<span class="token operator">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">3</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>输出<span class="token operator">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>Yes</pre></td></tr><tr><td data-num="8"></td><td><pre>No</pre></td></tr><tr><td data-num="9"></td><td><pre>Yes</pre></td></tr></table></figure><h2 id="思路和知识点-4"><a class="anchor" href="#思路和知识点-4">#</a> 思路和知识点</h2><p>你可以将含有括号的这一个字符串人为的分为左右两边。</p><p>出栈判定是右边的括号可以将左边正处于栈顶的括号匹配消除</p><p>入栈判定是栈为空或者是没有对应的括号可以匹配</p><h2 id="ac代码-3"><a class="anchor" href="#ac代码-3">#</a> AC 代码</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> stack<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// 栈顶指针，指的是下一个待插入的数组位置</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token comment">// 压栈操作</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    stack<span class="token punctuation">[</span>p<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">void</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    stack<span class="token punctuation">[</span><span class="token operator">--</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">int</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">return</span> stack<span class="token punctuation">[</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">char</span> <span class="token function">judge</span><span class="token punctuation">(</span><span class="token keyword">char</span> a<span class="token punctuation">)</span><span class="token comment">// 因为要让右边的括号匹配左边的括号，所以说对于每一种右括号都应该返回相对应的左括号形式</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token char">')'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token keyword">return</span> <span class="token char">'('</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token char">']'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token keyword">return</span> <span class="token char">'['</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token char">'&#125;'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token keyword">return</span> <span class="token char">'&#123;'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token keyword">return</span> <span class="token char">'/0'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token keyword">int</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    cin<span class="token operator">>></span>num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    string str<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// C++ 在使用 cin 输入时，光标停留在数字行的末尾，如果此时用 getline 读取一行，那么将读取到空行</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token keyword">while</span><span class="token punctuation">(</span>num<span class="token operator">--</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token keyword">while</span><span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>            <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 这里才是真正的去读入字符串</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="50"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="52"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                <span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 栈空则压入数据</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                <span class="token keyword">continue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">judge</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 栈顶左括号与右括号匹配</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>                <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            <span class="token keyword">else</span></pre></td></tr><tr><td data-num="61"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>                <span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="66"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span><span class="token string">"Yes\n"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token keyword">else</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span><span class="token string">"No\n"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><h1 id="20210926"><a class="anchor" href="#20210926">#</a> 2021.09.26</h1><h2 id="5-p1449-后缀表达式-洛谷-普及"><a class="anchor" href="#5-p1449-后缀表达式-洛谷-普及">#</a> 5. <span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE0NDk=">P1449 后缀表达式 - 洛谷 - 普及 </span></h2><h3 id="题目描述-5"><a class="anchor" href="#题目描述-5">#</a> 题目描述</h3><p>所谓后缀表达式是指这样的一个表达式：式中不再引用括号，运算符号放在两个运算对象之后，所有计算按运算符号出现的顺序，严格地由左而右新进行（不用考虑运算符的优先级）。</p><p>如：3*(5–2)+7 对应的后缀表达式为：3．5．2．-*7．+@。’@’为表达式的结束符号。‘.’为操作数的结束符号。</p><h2 id="样例-4"><a class="anchor" href="#样例-4">#</a> 样例</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>输入：</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">3.5</span><span class="token punctuation">.</span><span class="token number">2.</span><span class="token operator">-</span><span class="token operator">*</span><span class="token number">7.</span><span class="token operator">+</span>@</pre></td></tr><tr><td data-num="3"></td><td><pre>输出：</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">16</span></pre></td></tr></table></figure><h2 id="思路和知识点-5"><a class="anchor" href="#思路和知识点-5">#</a> 思路和知识点</h2><p>首先注意一点，运算符号前面的两位数字便是进行运算的两位数。</p><p>当在字符串读取到运算符号的时候，便从栈顶的顶部取两个数，然后进行运算，运算后的结果仍然放在栈顶。</p><h2 id="ac代码-4"><a class="anchor" href="#ac代码-4">#</a> AC 代码</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">int</span> stack<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    stack<span class="token punctuation">[</span>p<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">void</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    stack<span class="token punctuation">[</span><span class="token operator">--</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">int</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">return</span> stack<span class="token punctuation">[</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span> <span class="token comment">//x, y 是用于存放两个算数的临时变量</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">char</span> ch<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">do</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">&lt;=</span> <span class="token char">'9'</span> <span class="token operator">&amp;&amp;</span> ch <span class="token operator">>=</span> <span class="token char">'0'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            sum <span class="token operator">=</span> sum <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token punctuation">(</span>ch <span class="token operator">-</span> <span class="token char">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">'.'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token function">push</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">!=</span> <span class="token char">'@'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            x <span class="token operator">=</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            y <span class="token operator">=</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>ch<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                <span class="token keyword">case</span> <span class="token char">'+'</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                    <span class="token function">push</span><span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                    <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token keyword">case</span> <span class="token char">'-'</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                    <span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">-</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                    <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                <span class="token keyword">case</span> <span class="token char">'*'</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                    <span class="token function">push</span><span class="token punctuation">(</span>x <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>                    <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>                <span class="token keyword">case</span> <span class="token char">'/'</span><span class="token operator">:</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                    <span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">/</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            </pre></td></tr><tr><td data-num="55"></td><td><pre>                <span class="token comment">//default:</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                    <span class="token comment">//break;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">!=</span> <span class="token char">'@'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><h2 id="6-p1739-表达式括号匹配-洛谷-入门"><a class="anchor" href="#6-p1739-表达式括号匹配-洛谷-入门">#</a> 6. <span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE3Mzk=">P1739 表达式括号匹配 - 洛谷 - 入门</span></h2><h3 id="题目描述-6"><a class="anchor" href="#题目描述-6">#</a> 题目描述</h3><p>假设一个表达式有英文字母（小写）、运算符（+，—，*，/）和左右小（圆）括号构成，以 “@” 作为表达式的结束符。请编写一个程序检查表达式中的左右圆括号是否匹配，若匹配，则返回 “YES”；否则返回 “NO”。表达式长度小于 255，左圆括号少于 20 个。</p><h2 id="样例-5"><a class="anchor" href="#样例-5">#</a> 样例</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>输入：</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span>x<span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token punctuation">)</span>@</pre></td></tr><tr><td data-num="3"></td><td><pre>输出：</pre></td></tr><tr><td data-num="4"></td><td><pre>YES</pre></td></tr><tr><td data-num="5"></td><td><pre>输入：</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span><span class="token number">25</span><span class="token operator">+</span>x<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span>b<span class="token punctuation">)</span>@</pre></td></tr><tr><td data-num="7"></td><td><pre>输出</pre></td></tr><tr><td data-num="8"></td><td><pre>NO</pre></td></tr></table></figure><h2 id="思路和知识点-6"><a class="anchor" href="#思路和知识点-6">#</a> 思路和知识点</h2><p>这个相比于前面那道括号匹配题更加简单。</p><p>只要程序读取到左括号就压入栈顶，读入右括号就将栈顶弹出。</p><p>如果到最后栈非空，输出 NO，反之，输出 YES。</p><h2 id="ac代码-5"><a class="anchor" href="#ac代码-5">#</a> AC 代码</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> stack<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    stack<span class="token punctuation">[</span>p<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">void</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    stack<span class="token punctuation">[</span><span class="token operator">--</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">int</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">return</span> stack<span class="token punctuation">[</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    string s<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'('</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            <span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">')'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'('</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token keyword">else</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"NO"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="46"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"YES"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><h2 id="7-p1044-noip2003-普及组栈-洛谷-普及"><a class="anchor" href="#7-p1044-noip2003-普及组栈-洛谷-普及">#</a> 7. <span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDEwNDQ=">P1044 (NOIP2003 普及组) 栈 - 洛谷 - 普及</span></h2><h3 id="题目描述-7"><a class="anchor" href="#题目描述-7">#</a> 题目描述</h3><p>栈是计算机中经典的数据结构，简单的说，栈就是限制在一端进行插入删除操作的线性表。</p><p>栈有两种最重要的操作，即 pop（从栈顶弹出一个元素）和 push（将一个元素进栈）。</p><p>栈的重要性不言自明，任何一门数据结构的课程都会介绍栈。宁宁同学在复习栈的基本概念时，想到了一个书上没有讲过的问题，而他自己无法给出答案，所以需要你的帮忙。</p><p><img data-src="https://cdn.luogu.com.cn/upload/pic/18.png" alt="" /></p><p>宁宁考虑的是这样一个问题：一个操作数序列，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1,2,\ldots ,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span></span></span>（图示为 1 到 3 的情况），栈 A 的深度大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>。</p><p>现在可以进行两种操作，</p><ol><li>将一个数，从操作数序列的头端移到栈的头端（对应数据结构栈的 push 操作）</li><li>将一个数，从栈的头端移到输出序列的尾端（对应数据结构栈的 pop 操作）</li></ol><p>使用这两种操作，由一个操作数序列就可以得到一系列的输出序列，下图所示为由  <code>1 2 3</code>  生成序列  <code>2 3 1</code>  的过程。</p><p><img data-src="https://cdn.luogu.com.cn/upload/pic/19.png" alt="" /></p><p>（原始状态如上图所示）</p><p>你的程序将对给定的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>，计算并输出由操作数序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1,2,\ldots,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span></span></span> 经过操作可能得到的输出序列的总数。</p><h2 id="样例-6"><a class="anchor" href="#样例-6">#</a> 样例</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>输入：</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">3</span></pre></td></tr><tr><td data-num="3"></td><td><pre>输出：</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">5</span></pre></td></tr></table></figure><h2 id="思路和知识点-7"><a class="anchor" href="#思路和知识点-7">#</a> 思路和知识点</h2><p>本题我暂时也没搞得太明白，只是推算出了数学规律为卡特兰数。</p><p>至于卡特兰数怎么推导的，我再看看吧。</p><h2 id="ac代码-6"><a class="anchor" href="#ac代码-6">#</a> AC 代码</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">int</span> k<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">int</span> n<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    cin<span class="token operator">>></span>n<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            k<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> k<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">*</span> k<span class="token punctuation">[</span>i <span class="token operator">-</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    cout<span class="token operator">&lt;&lt;</span>k<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><h2 id="p1996-约瑟夫问题-洛谷-普及"><a class="anchor" href="#p1996-约瑟夫问题-洛谷-普及">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE5OTY=">P1996 约瑟夫问题 - 洛谷 - 普及</span></h2><h2 id="题目描述-8"><a class="anchor" href="#题目描述-8">#</a> 题目描述</h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个人围成一圈，从第一个人开始报数，数到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 的人出列，再由下一个人重新从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 开始报数，数到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 的人再出圈，依次类推，直到所有的人都出圈，请输出依次出圈人的编号。</p><p><strong>注意：本题和《深入浅出 - 基础篇》上例题的表述稍有不同。书上表述是给出淘汰 n-1 名小朋友，而该题是全部出圈。</strong></p><h2 id="样例-7"><a class="anchor" href="#样例-7">#</a> 样例</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>输入：</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">10</span> <span class="token number">3</span></pre></td></tr><tr><td data-num="3"></td><td><pre>输出：</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span> <span class="token number">6</span> <span class="token number">9</span> <span class="token number">2</span> <span class="token number">7</span> <span class="token number">1</span> <span class="token number">8</span> <span class="token number">5</span> <span class="token number">10</span> <span class="token number">4</span></pre></td></tr></table></figure><h2 id="思路和知识点-8"><a class="anchor" href="#思路和知识点-8">#</a> 思路和知识点</h2><p>典型的队列问题。</p><p>这里我们先将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个数按照从小到大的顺序以此加入队列，此时我们再每次将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个数从队前迁移到队尾，那么此时在队伍最前的便是要淘汰的数，输出后直接弹出。</p><p>直到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi><mo>=</mo><mo>=</mo><mi>t</mi><mi>a</mi><mi>i</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">head == tail</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 结束。</p><h2 id="ac代码-7"><a class="anchor" href="#ac代码-7">#</a> AC 代码</h2><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">int</span> queue<span class="token punctuation">[</span><span class="token number">100000</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> head <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> tail <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    queue<span class="token punctuation">[</span>tail<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">void</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    queue<span class="token punctuation">[</span>head<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">int</span> <span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">return</span> queue<span class="token punctuation">[</span>head<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    cin<span class="token operator">>></span>n<span class="token operator">>></span>m<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> m <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"1"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">while</span><span class="token punctuation">(</span>head <span class="token operator">!=</span> tail<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token function">push</span><span class="token punctuation">(</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">让记忆更加深刻</summary>
    
    
    
    <category term="学习笔记" scheme="https://cdn.sakurasep.site/Shoka/categories/Study/"/>
    
    
    <category term="C语言" scheme="https://cdn.sakurasep.site/Shoka/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="算法" scheme="https://cdn.sakurasep.site/Shoka/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>博客日志-记录博客最新动态</title>
    <link href="https://cdn.sakurasep.site/Shoka/HexoAbout/%E5%8D%9A%E5%AE%A2%E5%85%AC%E5%91%8A%20-%20%E4%B8%8A%E6%9D%89%E4%B9%9D%E6%9C%88%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://cdn.sakurasep.site/Shoka/HexoAbout/%E5%8D%9A%E5%AE%A2%E5%85%AC%E5%91%8A%20-%20%E4%B8%8A%E6%9D%89%E4%B9%9D%E6%9C%88%E7%9A%84%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-09-21T11:39:01.000Z</published>
    <updated>2022-06-28T01:56:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><p>你好，欢迎访问我的 Hexo 博客，博客现在处于正常运营状态，如果在某个地方出现使用问题或是加载缓慢的情况，请在本项目的 Github Issues 中进行反馈</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Nha3VyYXNlcC9NeUJsb2cvaXNzdWVz">Github Issues</span></p><p>这里我想要感谢</p><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNvb2xjaG9uZy5jbi8=">雨中的博客 (wenchong.space)</span> 提供美化问题解答，非常感谢。</p></blockquote><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9pbmtzcy5jbi8=">枋柚梓的猫会发光 (inkss.cn)</span> 的开源源码，对我的美化进程帮助很大，非常感谢。</p></blockquote><h2 id="关于主站"><a class="anchor" href="#关于主站">#</a> 关于主站</h2><p><strong>网站基本信息</strong></p><p>主站使用的是 <code>Github + Hexo + 腾讯云CDN</code>  的部署模式，最大程度保证访问速度。</p><p>分享文件全部采用依靠 Onedrive API 的 Cloudreve，毕竟没有限速，文件大小限制也少。</p><p>目前的加载速度已经经过很多优化，如果有加载缓慢的情况请联系站长。</p><p><strong>网站内容</strong></p><p>主要是分享知识。我个人认为知识应当没有门槛，做好知识分级，给不同阶段的朋友们都能带来收获。</p><p>目前个人技术有限，仅仅会写一些入门知识分享。</p><p>希望自己能够慢慢变强吧。</p><p>欢迎各位朋友能在思考之后积极的和我探讨交流。</p><h2 id="关于分站"><a class="anchor" href="#关于分站">#</a> 关于分站</h2><p><strong>注意事项</strong></p><p>分站没有去进行深度优化，仅仅作为一个基本的，保证能够阅读和互动的不同主题。<br />注意，分站仅仅是同步主站点的文章更新，有些信息可能没有及时更新</p><p>此外，本站所有文章都使用了 Volantis 独有的标签，分站没有进行优化，使用的默认标签类型</p><p><strong>如何使用</strong></p><p>本站将以往的配置的主题作为分站部署 <code>https://blog.sakurasep.site/主题名称</code> 下，通过导航栏可以直接访问，当然你也可以在下方直接跳转。</p><blockquote><p>你可以选择你所喜欢的博客主题进行文章阅读，希望带给你最好的阅读体验。</p></blockquote><h2 id="关于评论"><a class="anchor" href="#关于评论">#</a> 关于评论</h2><ol><li>本站在主站的评论系统已经更换为 Twikoo，更棒的评论系统，欢迎大家使用！</li><li>本站的评论邮件提醒已经恢复，你在主站的评论收到回复后将可以接收邮件提醒。</li></ol><h2 id="关于更新"><a class="anchor" href="#关于更新">#</a> 关于更新</h2><p>首先可以确定的是，我会首先保证质量，目前我的技术水平不足，很多地方做的不是很好，还希望各位能提出修改建议，我也会积极进行修改。</p><p>目前将学业与更新做个平衡的话，基本确定是月更，一篇 or 两篇，得看我的空闲时间。</p><p>目前的规划是</p><ul><li><p>旧文章的维护</p></li><li><p>稳定两个系列的更新（应用使用指南 + 零基础教程）</p></li></ul><h3 id="更新平台"><a class="anchor" href="#更新平台">#</a> 更新平台</h3><p><strong>首发更新</strong></p><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlLw==">上杉九月的博客</span></p></blockquote><blockquote><p>上杉九月的知识屋（微信公众号）</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY29vbGFway5jb20vdS8zMzM0OTU3P2Zyb209cXI=">酷安数码 - 上杉九月</span></p></blockquote><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMTQ4NTg3MTU=">哔哩哔哩 - 上杉九月</span></p></blockquote><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vdS81NzAzNTcwMjI5">微博 - 上杉九月</span></p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/coolapk_qr.png" alt="酷安" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/bilibili_qr.png" alt="B站" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/weibo_qr.png" alt="微博" /></p><h2 id="更新预告"><a class="anchor" href="#更新预告">#</a> 更新预告</h2><h3 id="应用使用指南系列-老文章修改"><a class="anchor" href="#应用使用指南系列-老文章修改">#</a> 应用使用指南系列 - 老文章修改</h3><ol><li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlL3Bvc3RzL3JlZGlyZWN0Lw==">存储空间隔离 - 换你一个干净整洁的根目录</span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlL3Bvc3RzL3BlcmZkb2cv">Perfdog - 简单直观的性能测试工具</span></li></ol><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/index.jpg" alt="Redirect" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/index.jpg" alt="Perfdog" /></p><h3 id="hexo系列-新系列"><a class="anchor" href="#hexo系列-新系列">#</a> Hexo 系列 - 新系列</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlL3Bvc3RzL2hleG8wMS8=">Hexo_01 - 博客的安装与部署</span><br /><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlL3Bvc3RzL2hleG8wMi8="> Hexo_02 - 博客的配置文件解析</span><br /><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlL3Bvc3RzL2hleG8wMy8="> Hexo_03-Volantis 主题的使用指南 (一)</span></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/index_1.jpg" alt="hexo01" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/index_2.jpg" alt="hexo02" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Hexo/index_3.jpg" alt="hexo03" /></p><h3 id="新文章"><a class="anchor" href="#新文章">#</a> 新文章</h3><p><a href="">FilterBox - 拯救你凌乱的通知栏</a><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/FilterBox/index.jpg" alt="FilterBox" /></p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">本次更新内容 - 对所有文章进行排版优化中，以及更换所有文章的头图。</summary>
    
    
    
    <category term="公告" scheme="https://cdn.sakurasep.site/Shoka/categories/About/"/>
    
    
    <category term="博客" scheme="https://cdn.sakurasep.site/Shoka/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="日志" scheme="https://cdn.sakurasep.site/Shoka/tags/%E6%97%A5%E5%BF%97/"/>
    
    <category term="公告" scheme="https://cdn.sakurasep.site/Shoka/tags/%E5%85%AC%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>程序开发实训-学习记录</title>
    <link href="https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-05-06T11:04:37.000Z</published>
    <updated>2022-06-29T02:54:13.389Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><blockquote><p>记录一下程序开发实训课程的题解。</p><p>我是用的 IDE 为 VsCode，所以在代码中会出现 <code>system(&quot;pause&quot;);</code></p></blockquote><h2 id="正文"><a class="anchor" href="#正文">#</a> 正文</h2><h3 id="p1000-素数判断"><a class="anchor" href="#p1000-素数判断">#</a> P1000. 素数判断</h3><h4 id="题目描述"><a class="anchor" href="#题目描述">#</a> 题目描述</h4><p>编写一个函数 isprime (n). 判断整数 n 是否为素数。编写程序使用此函数，当输入一个整数时，对它进行判断，当为素数时，输出 1. 否则，输出 0.</p><h4 id="输入输出格式"><a class="anchor" href="#输入输出格式">#</a> 输入输出格式</h4><h5 id="输入格式"><a class="anchor" href="#输入格式">#</a> 输入格式</h5><p>输入一个整数</p><h5 id="输出格式"><a class="anchor" href="#输出格式">#</a> 输出格式</h5><p>输出判断结果 0 或 1</p><h4 id="输入输出样例"><a class="anchor" href="#输入输出样例">#</a> 输入输出样例</h4><h5 id="输入样例-1"><a class="anchor" href="#输入样例-1">#</a> 输入样例 #1</h5><pre><code>45</code></pre><h5 id="输出样例-1"><a class="anchor" href="#输出样例-1">#</a> 输出样例 #1</h5><pre><code>0</code></pre><h4 id="题解"><a class="anchor" href="#题解">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路"><a class="anchor" href="#思路">#</a> 思路</h5><p>本题十分简单。</p><ul><li>使用 <code>temp</code>  变量存储 <code>num</code>  的因数个数</li><li>使用 for 从 2 循环到 <code>num</code> ，若出现 <code>num</code>  整除 <code>i</code>  时使 <code>temp++</code></li><li>最后使用 if 判断， <code>temp</code>  为 0 则说明只有 1 和它本身两个因数，故输出 1； <code>temp &gt; 0</code>  则说明有其他的因数，故输出 0</li></ul><h5 id="ac代码"><a class="anchor" href="#ac代码">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> temp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> pr<span class="token punctuation">[</span><span class="token number">10000000</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">int</span> <span class="token function">isprime</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            temp<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token keyword">else</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token keyword">int</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    cin<span class="token operator">>></span>num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    cout<span class="token operator">&lt;&lt;</span><span class="token function">isprime</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1001-直角三角形"><a class="anchor" href="#p1001-直角三角形">#</a> P1001. 直角三角形</h3><h4 id="题目描述-2"><a class="anchor" href="#题目描述-2">#</a> 题目描述</h4><p>任意输入三条边的边长（实数类型），判断能否组成三角形，如果不可以组成三角形，程序输出 “It is not a triangle”；如果可以组成三角形，进而判断该三角形是否是直角三角形，如果是直角三角形，程序输出 “It is a right triangle”，否则输出 “It is not a right triangle”。</p><h4 id="输入输出格式-2"><a class="anchor" href="#输入输出格式-2">#</a> 输入输出格式</h4><h5 id="输入格式-2"><a class="anchor" href="#输入格式-2">#</a> 输入格式</h5><p>三条边的边长</p><h5 id="输出格式-2"><a class="anchor" href="#输出格式-2">#</a> 输出格式</h5><p>判断结果</p><h4 id="输入输出样例-2"><a class="anchor" href="#输入输出样例-2">#</a> 输入输出样例</h4><h5 id="输入样例-1-2"><a class="anchor" href="#输入样例-1-2">#</a> 输入样例 #1</h5><p>6 8 10</p><h5 id="输出样例-1-2"><a class="anchor" href="#输出样例-1-2">#</a> 输出样例 #1</h5><p>It is a right triangle</p><h4 id="题解-2"><a class="anchor" href="#题解-2">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-2"><a class="anchor" href="#思路-2">#</a> 思路</h5><ul><li>首先为了方便处理数据，先将三条边长按照从小到大的顺序排列。排序算法随意，这里为了省事直接 sort</li><li>然后 <code>Judge_Triangle</code>  对数据预处理，筛选出来是否为三角形。若是，则进入下一个函数 <code>Right_Triangle</code> ，若不是，直接输出<strong> It is not a triangle</strong></li><li>判断直角三角形也很简单，勾股定理即可</li></ul><h5 id="ac代码-2"><a class="anchor" href="#ac代码-2">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">void</span> <span class="token function">Right_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"It is a right triangle"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"It is not a right triangle"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">void</span> <span class="token function">Judge_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token function">Right_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"It is not a triangle"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token function">Judge_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1002-直角三角形求最小余弦值"><a class="anchor" href="#p1002-直角三角形求最小余弦值">#</a> P1002. 直角三角形，求最小余弦值</h3><h4 id="题目描述-3"><a class="anchor" href="#题目描述-3">#</a> 题目描述</h4><p>任意输入三条边的边长（整数类型），判断能否组成三角形，如果不可以组成三角形，程序输出 “It is not a triangle”；如果可以组成三角形，进而判断该三角形是否是直角三角形，如果不是直角三角形，程序输出 “It is not a right triangle”，否则输出最小余弦值的最简分式。比如三边分别是 6、8、10 时，最小的余弦值是 6/10，那么输出的结果应该是 3/5。</p><h4 id="输入输出格式-3"><a class="anchor" href="#输入输出格式-3">#</a> 输入输出格式</h4><h5 id="输入格式-3"><a class="anchor" href="#输入格式-3">#</a> 输入格式</h5><p>三条边的边长</p><h5 id="输出格式-3"><a class="anchor" href="#输出格式-3">#</a> 输出格式</h5><p>最小余弦值的最简分式</p><h4 id="输入输出样例-3"><a class="anchor" href="#输入输出样例-3">#</a> 输入输出样例</h4><h5 id="输入样例-1-3"><a class="anchor" href="#输入样例-1-3">#</a> 输入样例 #1</h5><pre><code>6 8 10</code></pre><h5 id="输出样例-1-3"><a class="anchor" href="#输出样例-1-3">#</a> 输出样例 #1</h5><pre><code>3/5</code></pre><h4 id="题解-3"><a class="anchor" href="#题解-3">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-3"><a class="anchor" href="#思路-3">#</a> 思路</h5><ul><li>本题是在上题的基础上增加了分式化简，因为已经对边长进行了排序，故余弦值一定是 <code>a[0] / a[2]</code></li><li>化简就是找两者的最大公因式，使用 <code>temp</code>  存储，然后使用 for 遍历较小的边</li><li>因为 <code>temp</code>  这里初始为 0，所以 <code>temp</code>  为 0 说明两者没有公因式，直接输出</li></ul><h5 id="ac代码-3"><a class="anchor" href="#ac代码-3">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">int</span> temp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">void</span> <span class="token function">GCD</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            temp <span class="token operator">=</span> i<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">void</span> <span class="token function">Cos_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token function">GCD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">"/"</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span> temp<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"/"</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">/</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token keyword">void</span> <span class="token function">Right_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token function">Cos_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"It is not a right triangle"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token keyword">void</span> <span class="token function">Judge_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token function">Right_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="48"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"It is not a triangle"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>    <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>a<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token function">Judge_Triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1003-求三角形面积"><a class="anchor" href="#p1003-求三角形面积">#</a> P1003. 求三角形面积</h3><h4 id="题目描述-4"><a class="anchor" href="#题目描述-4">#</a> 题目描述</h4><p>若已知三角形三个边的长度分别为 a,b,c（并假设三个边长度的单位一致，在本编程题中忽略其单位），则可以利用公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msqrt><mrow><mi>s</mi><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">S = \sqrt{s(s - a)(s - b)(s - c)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span>，然后利用上述公式计算面积并输出，结果小数点后保留 3 位有效数字。</p><h4 id="输入输出格式-4"><a class="anchor" href="#输入输出格式-4">#</a> 输入输出格式</h4><h5 id="输入格式-4"><a class="anchor" href="#输入格式-4">#</a> 输入格式</h5><p>从控制台输入三个整数表示三角形三个边的长度，以空格分隔三个整数。</p><h5 id="输出格式-4"><a class="anchor" href="#输出格式-4">#</a> 输出格式</h5><p>向控制台输出求得的三角形的面积，小数点后保留三位有效数字。</p><h4 id="输入输出样例-4"><a class="anchor" href="#输入输出样例-4">#</a> 输入输出样例</h4><h5 id="输入样例-1-4"><a class="anchor" href="#输入样例-1-4">#</a> 输入样例 #1</h5><pre><code>4 4 6</code></pre><h5 id="输出样例-1-4"><a class="anchor" href="#输出样例-1-4">#</a> 输出样例 #1</h5><pre><code>7.937</code></pre><h4 id="题解-4"><a class="anchor" href="#题解-4">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-4"><a class="anchor" href="#思路-4">#</a> 思路</h5><ul><li>有公式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msqrt><mrow><mi>s</mi><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>s</mi><mo>−</mo><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">S = \sqrt{s(s - a)(s - b)(s - c)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span>，直接根据公式写代码</li><li>使用 <code>.3f</code>  保留三位小数</li></ul><h5 id="ac代码-4"><a class="anchor" href="#ac代码-4">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">float</span> s<span class="token punctuation">,</span> area<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token operator">>></span>c<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    s <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    area <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">*</span> <span class="token punctuation">(</span>s <span class="token operator">-</span> a<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>s <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>s <span class="token operator">-</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.3f"</span><span class="token punctuation">,</span> area<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1004-整数各位数求和"><a class="anchor" href="#p1004-整数各位数求和">#</a> P1004. 整数各位数求和</h3><h4 id="题目描述-5"><a class="anchor" href="#题目描述-5">#</a> 题目描述</h4><p>编写一个函数 sum (i), 将输入的整形参数 i 的各位求和，返回求和结果。在 main () 函数中测试此函数，从键盘输入整数 n（n 在区间 [1,20]），然后再输入 n 个非负整数，对于每一个非负整数调用 sum 函数求各位数和，将结果输出到屏幕。</p><h4 id="输入输出格式-5"><a class="anchor" href="#输入输出格式-5">#</a> 输入输出格式</h4><h5 id="输入格式-5"><a class="anchor" href="#输入格式-5">#</a> 输入格式</h5><p>从键盘输入一个正整数 n，然后有 n 行输入，分别表示 n 个非负整数。</p><h5 id="输出格式-5"><a class="anchor" href="#输出格式-5">#</a> 输出格式</h5><p>在屏幕上分别输出 n 行，第 i 行依次对应第 i 个非负整数的各位之和。</p><h4 id="输入输出样例-5"><a class="anchor" href="#输入输出样例-5">#</a> 输入输出样例</h4><h5 id="输入样例-1-5"><a class="anchor" href="#输入样例-1-5">#</a> 输入样例 #1</h5><pre><code>42345670999999000432</code></pre><h5 id="输出样例-1-5"><a class="anchor" href="#输出样例-1-5">#</a> 输出样例 #1</h5><pre><code>270549</code></pre><h5 id="样例说明"><a class="anchor" href="#样例说明">#</a> 样例说明</h5><pre><code>整数234567、0、999999和000432各位之和（个位、十位、百位&amp;hellip;&amp;hellip;相加）分别为：27、0、54和9，故在屏幕上打印输出：270549</code></pre><h4 id="题解-5"><a class="anchor" href="#题解-5">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-5"><a class="anchor" href="#思路-5">#</a> 思路</h5><ul><li>使用变量 <code>temp</code>  存储结果，对于保存在数组里的数据，%10 取最后一位，/10 舍去最后一位，当 num 舍到个位数，直接加到 <code>temp</code> ，输出结果</li></ul><h5 id="ac代码-5"><a class="anchor" href="#ac代码-5">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">void</span> <span class="token function">Sum_Number</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">while</span><span class="token punctuation">(</span>num <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        temp <span class="token operator">+=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        num <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    temp <span class="token operator">+=</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    cout<span class="token operator">&lt;&lt;</span>temp<span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token keyword">int</span> n<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    cin<span class="token operator">>></span>n<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">int</span> a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token function">Sum_Number</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token punctuation">&#125;</span>  </pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1005-玫瑰花数"><a class="anchor" href="#p1005-玫瑰花数">#</a> P1005. 玫瑰花数</h3><h4 id="题目描述-6"><a class="anchor" href="#题目描述-6">#</a> 题目描述</h4><p>如果一个四位数各位数字的四次方之和恰好等于该数本身，那么这个四位数就是一个玫瑰花数，例如：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1634</mn><mo>=</mo><msup><mn>1</mn><mn>4</mn></msup><mo>+</mo><msup><mn>6</mn><mn>4</mn></msup><mo>+</mo><msup><mn>3</mn><mn>4</mn></msup><mo>+</mo><msup><mn>4</mn><mn>4</mn></msup><mo>=</mo><mn>1</mn><mo>+</mo><mn>1296</mn><mo>+</mo><mn>81</mn><mo>+</mo><mn>256</mn></mrow><annotation encoding="application/x-tex">1634 = 1^4 + 6^4 + 3^4 + 4^4 = 1 + 1296 + 81 + 256</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">3</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">9</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span></span></span></span></p><p>写一个函数，判断某一个四位数是不是玫瑰花数，如果是玫瑰花数返回 1，否则返回 0。并在主函数中调用该函数，最终输出所有的玫瑰花数。</p><h4 id="输入输出格式-6"><a class="anchor" href="#输入输出格式-6">#</a> 输入输出格式</h4><h5 id="输入格式-6"><a class="anchor" href="#输入格式-6">#</a> 输入格式</h5><p>没有输入</p><h5 id="输出格式-6"><a class="anchor" href="#输出格式-6">#</a> 输出格式</h5><p>所有的四位玫瑰花数。（每行中仅显示一个玫瑰花数）</p><h4 id="输入输出样例-6"><a class="anchor" href="#输入输出样例-6">#</a> 输入输出样例</h4><p>无</p><h4 id="题解-6"><a class="anchor" href="#题解-6">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-6"><a class="anchor" href="#思路-6">#</a> 思路</h5><ul><li>该题枚举即可，从 1000 开始枚举到 10000，a 数组分别存个十百千四位。</li><li><code>num</code>  将每一位四次方的结果存起来，和此时枚举的 <code>i</code>  作比较，若是，则输出。</li></ul><h5 id="ac代码-6"><a class="anchor" href="#ac代码-6">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath></span><span class="token comment">//pow(10, x)</span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">int</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">int</span> temp <span class="token operator">=</span> i<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        temp <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        temp <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        num <span class="token operator">=</span> <span class="token function">pow</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pow</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pow</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pow</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">==</span> i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span>i<span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1006-旋转魔方阵"><a class="anchor" href="#p1006-旋转魔方阵">#</a> P1006. 旋转魔方阵</h3><h4 id="题目描述-7"><a class="anchor" href="#题目描述-7">#</a> 题目描述</h4><p>输入一个自然数Ｎ（N 属于 2 到 15），要求输出如下的魔方阵，即边长为 N<em>N，元素取值为 1 至 N</em>N，1 在左上角，呈顺时针方向依次放置各元素。<br />N=3 时：<br />1  2  3<br />8  9  4<br />7  6  5</p><h4 id="输入输出格式-7"><a class="anchor" href="#输入输出格式-7">#</a> 输入输出格式</h4><h5 id="输入格式-7"><a class="anchor" href="#输入格式-7">#</a> 输入格式</h5><p>从标准输入读取一个整数 N。</p><h5 id="输出格式-7"><a class="anchor" href="#输出格式-7">#</a> 输出格式</h5><p>向标准输出打印结果。输出符合要求的方阵，每个数字占 5 个字符宽度，向右对齐，在每一行末均输出一个回车符。</p><h4 id="输入输出样例-7"><a class="anchor" href="#输入输出样例-7">#</a> 输入输出样例</h4><h5 id="输入样例-1-6"><a class="anchor" href="#输入样例-1-6">#</a> 输入样例 #1</h5><pre><code>4</code></pre><h5 id="输出样例-1-6"><a class="anchor" href="#输出样例-1-6">#</a> 输出样例 #1</h5><pre><code>    1    2    3    4   12   13   14    5   11   16   15    6   10    9    8    7</code></pre><h4 id="题解-7"><a class="anchor" href="#题解-7">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-7"><a class="anchor" href="#思路-7">#</a> 思路</h5><ul><li>使用模拟算法， <code>x</code>  和 <code>y</code>  为坐标，使用 for 从 1 到 <code>num</code>  循环</li><li>明确四个方向的填数代码，注意两点。一是坐标 <code>x</code>  和 <code>y</code>  需要先改变，也就是 <code>++x ++y</code> ，同时填数变量 <code>tmp</code>  也需要先增加。（因为我们在填数时始终是在找下一个位置）</li><li>本题存在规律（代码结尾处）。先进行向右的移动，然后就是两次循环，按照下左上右的规律。</li><li>本题和接下来几个题使用的动态二维数组定义代码是通用的，可以直接当作模板套用</li></ul><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>element <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">int</span> size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>cin<span class="token operator">>></span>size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>    element <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        element<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h5 id="ac代码-7"><a class="anchor" href="#ac代码-7">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iomanip></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token comment">// 定义动态二维数组</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>element <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">int</span> size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    cin<span class="token operator">>></span>size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">int</span> num <span class="token operator">=</span> size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>    element <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        element<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token comment">// 核心代码</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> num<span class="token punctuation">;</span> j <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token comment">//right</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    </pre></td></tr><tr><td data-num="26"></td><td><pre>    y<span class="token operator">--</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token keyword">while</span><span class="token punctuation">(</span>tmp <span class="token operator">&lt;</span> size <span class="token operator">*</span> size<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        num<span class="token operator">--</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> num<span class="token punctuation">;</span> j <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token comment">//down</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            element<span class="token punctuation">[</span><span class="token operator">++</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> num<span class="token punctuation">;</span> j <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token comment">//left</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">--</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        num<span class="token operator">--</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> num<span class="token punctuation">;</span> j <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token comment">//up</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            element<span class="token punctuation">[</span><span class="token operator">--</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> num<span class="token punctuation">;</span> j <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token comment">//right</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>            element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">++</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    </pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="51"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            </pre></td></tr><tr><td data-num="57"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span><span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>element<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    </pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token comment">// 面板停留</span></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="65"></td><td><pre></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token comment">/* 规律</pre></td></tr><tr><td data-num="67"></td><td><pre>1  2  3  4</pre></td></tr><tr><td data-num="68"></td><td><pre>12 13 14 5</pre></td></tr><tr><td data-num="69"></td><td><pre>11 16 15 6</pre></td></tr><tr><td data-num="70"></td><td><pre>10 9  8  7</pre></td></tr><tr><td data-num="71"></td><td><pre>3 3 3 2 2 1 1</pre></td></tr><tr><td data-num="72"></td><td><pre>*/</span></pre></td></tr></table></figure><h3 id="p1007-折叠方阵"><a class="anchor" href="#p1007-折叠方阵">#</a> P1007. 折叠方阵</h3><h4 id="题目描述-8"><a class="anchor" href="#题目描述-8">#</a> 题目描述</h4><p>给定一个起始数（大于等于 1，小于等于 20）和方阵的阶数（大于等于 1，小于等于 20），编程求得并输出该折叠方阵。一个起始数为 10，4 阶折叠方阵为：</p><p>10  11  14  19</p><p>13  12  15  20</p><p>18  17  16  21</p><p>25  24  23  22</p><h4 id="输入输出格式-8"><a class="anchor" href="#输入输出格式-8">#</a> 输入输出格式</h4><h5 id="输入格式-8"><a class="anchor" href="#输入格式-8">#</a> 输入格式</h5><p>从标准输入中输入两个正整数分别表示起始数和方阵的阶数，以一个空格分隔这两个数字。</p><h5 id="输出格式-8"><a class="anchor" href="#输出格式-8">#</a> 输出格式</h5><p>将生成的折叠方阵按行输出到标准输出上，每个数字占 4 个字符的宽度，靠右对齐，各数字之间不再有空格分隔，每行末尾有回车换行。</p><h4 id="输入输出样例-8"><a class="anchor" href="#输入输出样例-8">#</a> 输入输出样例</h4><h5 id="输入样例-1-7"><a class="anchor" href="#输入样例-1-7">#</a> 输入样例 #1</h5><pre><code>3 5</code></pre><h5 id="输出样例-1-7"><a class="anchor" href="#输出样例-1-7">#</a> 输出样例 #1</h5><pre><code>   3   4   7  12  19   6   5   8  13  20  11  10   9  14  21  18  17  16  15  22  27  26  25  24  23</code></pre><h4 id="样例说明-2"><a class="anchor" href="#样例说明-2">#</a> 样例说明</h4><p>样例输入的起始数为 3，方阵的阶数为 5，按行输出生成的折叠方阵，每个数字占 4 个字符的宽度。</p><p>提示：输出时为了使每个数字占 4 个字符宽度，c 程序可以使用：printf (&quot;%4d&quot;,......) 进行控制输出。</p><h4 id="题解-8"><a class="anchor" href="#题解-8">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-8"><a class="anchor" href="#思路-8">#</a> 思路</h5><ul><li>本题依然有规律，请把方阵分解为朝向左的 L。同时把第一行作为每一次循环的开始。</li><li>L 的大小是和列号相同。</li><li>核心代码为，向下的循环和向左的循环。</li></ul><h5 id="ac代码-8"><a class="anchor" href="#ac代码-8">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iomanip></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    </pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token comment">// 定义动态二维数组</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>element <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">int</span> start<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">int</span> size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    cin<span class="token operator">>></span>start<span class="token operator">>></span>size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">int</span> tmp <span class="token operator">=</span> start<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>    element <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        element<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    </pre></td></tr><tr><td data-num="23"></td><td><pre> </pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token comment">// 核心代码</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>    element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span>num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> num <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> num<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token comment">// 第一行</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        y <span class="token operator">=</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">while</span><span class="token punctuation">(</span>tmp <span class="token operator">&lt;=</span> num <span class="token operator">*</span> num <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> start<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//down</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                element<span class="token punctuation">[</span>x<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            x<span class="token operator">--</span><span class="token punctuation">;</span><span class="token comment">// 纠正 X 轴</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> num<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//left</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">--</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tmp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre></pre></td></tr><tr><td data-num="48"></td><td><pre></pre></td></tr><tr><td data-num="49"></td><td><pre>    </pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="51"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            </pre></td></tr><tr><td data-num="57"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span><span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>element<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    </pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token comment">// 面板停留</span></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1008-方阵乘法运算"><a class="anchor" href="#p1008-方阵乘法运算">#</a> P1008. 方阵乘法运算</h3><h4 id="题目描述-9"><a class="anchor" href="#题目描述-9">#</a> 题目描述</h4><p>从键盘输入一个正整数 n（n 属于 [1,10]），表示进行乘法运算的两个整形方阵的阶。然后分别输入两个整形方阵 A 和 B，计算 A*B 后将结果输出到屏幕。</p><h4 id="输入输出格式-9"><a class="anchor" href="#输入输出格式-9">#</a> 输入输出格式</h4><h5 id="输入格式-9"><a class="anchor" href="#输入格式-9">#</a> 输入格式</h5><p>从键盘输入一个正整数，然后再输入两个整形方阵。</p><h5 id="输出格式-9"><a class="anchor" href="#输出格式-9">#</a> 输出格式</h5><p>在屏幕上输出两个整形方阵的乘积。</p><h4 id="输入输出样例-9"><a class="anchor" href="#输入输出样例-9">#</a> 输入输出样例</h4><h5 id="输入样例-1-8"><a class="anchor" href="#输入样例-1-8">#</a> 输入样例 #1</h5><pre><code>31 1 13 3 36 6 69 9 96 6 65 5 5</code></pre><h5 id="输出样例-1-8"><a class="anchor" href="#输出样例-1-8">#</a> 输出样例 #1</h5><p>########20########20########20<br />########60########60########60<br />#######120#######120#######120</p><h4 id="样例说明-3"><a class="anchor" href="#样例说明-3">#</a> 样例说明</h4><p>首先输入正整数 3, 说明接下来要输入的方阵是 3*3 的。因为<br /> 1 1 1     9 9 9     20 20 20<br />3 3 3  *  6 6 6  =  60 60 60<br />6 6 6    5 5 5     120 120 120<br /> 所以在屏幕上打印：<br />########20########20########20<br />########60########60########60<br />#######120#######120#######120</p><p>注：&quot;#&quot; 代表空格，每个输出的整数占 10 位，不足 10 位在整数的左边用空格补足。</p><h4 id="题解-9"><a class="anchor" href="#题解-9">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-9"><a class="anchor" href="#思路-9">#</a> 思路</h5><ul><li><code>element[]</code>  为存储第一个矩阵， <code>element_02[]</code>  为存储第二个矩阵， <code>element_03[]</code>  为输出结果矩阵</li><li><span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclOUYlQTklRTklOTglQjUlRTQlQjklOTglRTYlQjMlOTUvNTQ0NjAyOT9mcj1hbGFkZGlu">矩阵乘法_百度百科 (baidu.com)</span></li><li>只要是看懂了矩阵的乘法运算规律，通过一一对应，本题便能做出来。</li></ul><h5 id="ac代码-9"><a class="anchor" href="#ac代码-9">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iomanip></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    </pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token comment">// 定义动态二维数组</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>element <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>element_02 <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>element_03 <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">int</span> size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    cin<span class="token operator">>></span>size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    element <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        element<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    element_02 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        element_02<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>    element_03 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        element_03<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token comment">// 输入数据</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            cin<span class="token operator">>></span>element<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>            cin<span class="token operator">>></span>element_02<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre>    <span class="token comment">// 核心代码</span></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            element_03<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="60"></td><td><pre></pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token keyword">int</span> num <span class="token operator">=</span> size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>            <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>            <span class="token keyword">while</span><span class="token punctuation">(</span>num <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="68"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                element_03<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> element<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">*</span> element_02<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                y<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>                num<span class="token operator">--</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token punctuation">&#125;</span>   </pre></td></tr><tr><td data-num="73"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="75"></td><td><pre></pre></td></tr><tr><td data-num="76"></td><td><pre></pre></td></tr><tr><td data-num="77"></td><td><pre></pre></td></tr><tr><td data-num="78"></td><td><pre>    <span class="token comment">// 结果输出</span></pre></td></tr><tr><td data-num="79"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="80"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span><span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>element_03<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="87"></td><td><pre></pre></td></tr><tr><td data-num="88"></td><td><pre>    <span class="token comment">// VSCode</span></pre></td></tr><tr><td data-num="89"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="91"></td><td><pre></pre></td></tr><tr><td data-num="92"></td><td><pre></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="94"></td><td><pre><span class="token comment">/*</pre></td></tr><tr><td data-num="95"></td><td><pre>3</pre></td></tr><tr><td data-num="96"></td><td><pre>1 1 1 9 9 9</pre></td></tr><tr><td data-num="97"></td><td><pre>3 3 3 6 6 6</pre></td></tr><tr><td data-num="98"></td><td><pre>6 6 6 5 5 5</pre></td></tr><tr><td data-num="99"></td><td><pre>*/</span></pre></td></tr></table></figure><h3 id="p1009-n阶魔方阵"><a class="anchor" href="#p1009-n阶魔方阵">#</a> P1009. N 阶魔方阵</h3><h4 id="题目描述-10"><a class="anchor" href="#题目描述-10">#</a> 题目描述</h4><p>魔方阵指一个 A 是 NxN 矩阵（在本题中 N 仅为奇数，且 N&gt;1），以自然数 1，2， 。。。 N2 为元素进行填充，每个位置上分别放置一个元素，使每行、每列以及主、副对角线上的元素之和都相等。<br />如 3x3 魔方阵，图在每行、每列、主对角线、副对角线上元素之和均为 15：<br />8 1 6<br />3 5 7<br />4 9 2<br /> 奇数阶魔方阵的生成算法如下，初始矩阵 A 为空，从 1 开始依据下面的规则依次放置各个自然数（注意在下面的叙述中各元素行、列下标均以 1-N 计数）：<br />\1. 将 1 放在第一行正中的位置，即 A [1, (j+1)/2]；<br />\2. 设最后放置的元素是 A [i, j]，则将下一个元素放在最后一个插入位置的右上方，即 A [i-1, j+1]。但如果该位置已超出方阵的上边界（即如果 i&lt;0），则新位置取该列的最下一个位置，即 A [N, j+1]；如果该位置已超出方阵的右边界，取新位置取该行的最左一个位置，即 A [i-1, 1]。<br />\3. 若最近一个插入元素为 N 的整倍数，则新位置取最后插入元素下面的位置，即 A [i+1, j]。<br />输入一个奇数 N，打印对应的 N 阶魔方阵。</p><h4 id="输入输出格式-10"><a class="anchor" href="#输入输出格式-10">#</a> 输入输出格式</h4><h5 id="输入格式-10"><a class="anchor" href="#输入格式-10">#</a> 输入格式</h5><p>控制台输入一奇数 N。</p><h5 id="输出格式-10"><a class="anchor" href="#输出格式-10">#</a> 输出格式</h5><p>输出一个 N*N 的魔方阵，其中每个数字占 4 位字符的宽度，向右对齐。</p><h4 id="输入输出样例-10"><a class="anchor" href="#输入输出样例-10">#</a> 输入输出样例</h4><h5 id="输入样例-1-9"><a class="anchor" href="#输入样例-1-9">#</a> 输入样例 #1</h5><pre><code>5</code></pre><h5 id="输出样例-1-9"><a class="anchor" href="#输出样例-1-9">#</a> 输出样例 #1</h5><pre><code>  17  24   1   8  15  23   5   7  14  16   4   6  13  20  22  10  12  19  21   3  11  18  25   2   9</code></pre><h4 id="样例说明-4"><a class="anchor" href="#样例说明-4">#</a> 样例说明</h4><p>输入奇数 5，输出 5 阶魔方阵。</p><h4 id="题解-10"><a class="anchor" href="#题解-10">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-10"><a class="anchor" href="#思路-10">#</a> 思路</h5><ul><li>本题主要是考察限定规则，题目中每一次新的位置都是在原来位置的右上方，此时你需要考虑两种情况：一是超出数组的边界，一是右上角已经存在数据。</li><li>本题代码使用了 <code>maps</code>  数组来标记数据的填充，在每一次填数操作后都使得该位置的 <code>maps</code>  数组为 1。</li><li>判断情况有以下几种。<ul><li>超右边界但是不超上边界</li><li>超上边界但是不超右边界</li><li>既超上边界也超右边界</li><li>既不超上边界也不超右边界</li></ul></li></ul><h5 id="ac代码-10"><a class="anchor" href="#ac代码-10">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iomanip></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token comment">// 核心代码</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">int</span> size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    cin<span class="token operator">>></span>size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>size <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">// 定义动态二维数组</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>element <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>maps <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>    element <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        element<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>    maps <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        maps<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            element<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            maps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>    element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> num <span class="token operator">&lt;=</span> size <span class="token operator">*</span> size<span class="token punctuation">;</span> num<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="42"></td><td><pre>        <span class="token punctuation">&#123;</span>   </pre></td></tr><tr><td data-num="43"></td><td><pre>            element<span class="token punctuation">[</span><span class="token operator">++</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>            maps<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>            <span class="token keyword">continue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> size <span class="token operator">&amp;&amp;</span> maps<span class="token punctuation">[</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">++</span>y<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// 超上边界但不超右边界</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            x <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>            maps<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>            <span class="token keyword">continue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="55"></td><td><pre></pre></td></tr><tr><td data-num="56"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>y <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">></span> size <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> maps<span class="token punctuation">[</span><span class="token operator">--</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// 超右边界但不超上边界</span></pre></td></tr><tr><td data-num="57"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>            y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>            element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            maps<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>            <span class="token keyword">continue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="63"></td><td><pre></pre></td></tr><tr><td data-num="64"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">></span> size <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> maps<span class="token punctuation">[</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">// 既超上边界也超右边界</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>            x <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>            element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>            maps<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>            <span class="token keyword">continue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="71"></td><td><pre></pre></td></tr><tr><td data-num="72"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> size <span class="token operator">&amp;&amp;</span> maps<span class="token punctuation">[</span><span class="token operator">--</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">++</span>y<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="73"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            element<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>            maps<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>            <span class="token keyword">continue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="79"></td><td><pre></pre></td></tr><tr><td data-num="80"></td><td><pre>    <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="81"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="82"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="84"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span><span class="token function">setw</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>element<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="89"></td><td><pre></pre></td></tr><tr><td data-num="90"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="91"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1010-完美数"><a class="anchor" href="#p1010-完美数">#</a> P1010. 完美数</h3><h4 id="题目描述-11"><a class="anchor" href="#题目描述-11">#</a> 题目描述</h4><p>所有真约数（除本身之外的正约数）的和等于它本身的正整数叫做完美数，又叫做完全数或完备数。当所有真约数（除本身之外的正约数）的和等于它本身的正整数叫做亏数；相反情况时，叫做盈数。</p><p>比如 “4” 这个数，它的真约数有 1，2，其和是 3，3 比 4 本身小，这样的自然数就叫做亏数（又叫做缺数），类似的还有 5，7，8 等等。比如 “12” 这个数，它真约数有 1，2，3，4，6，其和是 16，16 比 12 本身大，这样的自然数就叫做盈数（又叫做丰数，或过剩数或富裕数），类似的还有 12，18，20 等等。</p><p>完美数就是既不盈余，又不亏欠的自然数，比如 “6” 这个数，它真约数有 1，2，3，其和是 1+2+3=6，刚好等于 6 本身。</p><p>要求用户从键盘上输入任意一个自然数，判断该数是盈数、亏数还是完美数。如果该数是亏数，输出 “Deficit”；如果该数是盈数，输出 “Surplus”；如果该数 是完美数，则输出 “Perfect” 。</p><h4 id="输入输出格式-11"><a class="anchor" href="#输入输出格式-11">#</a> 输入输出格式</h4><h5 id="输入格式-11"><a class="anchor" href="#输入格式-11">#</a> 输入格式</h5><p>一个自然数。</p><h5 id="输出格式-11"><a class="anchor" href="#输出格式-11">#</a> 输出格式</h5><p>如果该数是亏数，输出 “Deficit”；如果该数是盈数，输出 “Surplus”；如果该数是完美数，输出 “Perfect”。</p><h4 id="输入输出样例-11"><a class="anchor" href="#输入输出样例-11">#</a> 输入输出样例</h4><h5 id="输入样例-1-10"><a class="anchor" href="#输入样例-1-10">#</a> 输入样例 #1</h5><pre><code>6</code></pre><h5 id="输出样例-1-10"><a class="anchor" href="#输出样例-1-10">#</a> 输出样例 #1</h5><pre><code>Perfect</code></pre><h4 id="题解-11"><a class="anchor" href="#题解-11">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-11"><a class="anchor" href="#思路-11">#</a> 思路</h5><ul><li>本题实际上是找因数的改动版本。先找到输入数的因数，然后将所有因数（除它本身以外）相加。</li></ul><h5 id="ac代码-11"><a class="anchor" href="#ac代码-11">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">int</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    cin<span class="token operator">>></span>num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    </pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token comment">//Core</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            ans <span class="token operator">+=</span> i<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>ans <span class="token operator">></span> num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"Surplus"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ans <span class="token operator">&lt;</span> num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"Deficit"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"Perfect"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="p1011-一元二次方程的根"><a class="anchor" href="#p1011-一元二次方程的根">#</a> P1011. 一元二次方程的根</h3><h4 id="题目描述不考虑虚根"><a class="anchor" href="#题目描述不考虑虚根">#</a> 题目描述（不考虑虚根）</h4><p>在实数范围内求方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ax^2+bx+c=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的根。方程的系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a,b,c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span> 由用户从键盘上输入。</p><h4 id="输入输出格式-12"><a class="anchor" href="#输入输出格式-12">#</a> 输入输出格式</h4><h5 id="输入格式-1"><a class="anchor" href="#输入格式-1">#</a> 输入格式 #1</h5><p>方程的系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a,b,c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span>（假设是整型数据）。</p><h5 id="输出格式-1"><a class="anchor" href="#输出格式-1">#</a> 输出格式 #1</h5><p>实数范围内求方程的根，如果存在实数根，结果保留两位小数且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mn>1</mn><mo>≥</mo><mi>x</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x1 \ge x2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mord">2</span></span></span></span>。当有两个实根时，要求先输出实根<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mo>−</mo><mi>b</mi><mo>+</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>b</mi><mn>2</mn><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">x=[-b+\sqrt{(b2-4ac)}]/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">]</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span>，空格后再输出实根<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mo>−</mo><mi>b</mi><mo>−</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>b</mi><mn>2</mn><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">x=[-b-\sqrt{(b2-4ac)}]/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">]</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span>；当有两个相同的实根时，仅输出一个实根<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mo>−</mo><mi>b</mi><mo>+</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>b</mi><mn>2</mn><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">x=[-b+\sqrt{(b2-4ac)}]/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">]</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span> 或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mo>−</mo><mi>b</mi><mo>−</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>b</mi><mn>2</mn><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">x=[-b-\sqrt{(b2-4ac)}]/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">]</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span> 即可；当没有实根时，输出 &quot;NONE&quot;。</p><h4 id="输入输出样例-12"><a class="anchor" href="#输入输出样例-12">#</a> 输入输出样例</h4><h5 id="输入样例-1-11"><a class="anchor" href="#输入样例-1-11">#</a> 输入样例 #1</h5><pre><code>1 8 4</code></pre><h5 id="输出样例-1-11"><a class="anchor" href="#输出样例-1-11">#</a> 输出样例 #1</h5><pre><code>-0.54 -7.46</code></pre><h4 id="题解-12"><a class="anchor" href="#题解-12">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-12"><a class="anchor" href="#思路-12">#</a> 思路</h5><ul><li>注意 Δ 的判断即可，本题没有难度。</li></ul><h5 id="ac代码-12"><a class="anchor" href="#ac代码-12">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">double</span> ans1<span class="token punctuation">,</span> ans2<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token operator">>></span>c<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>b <span class="token operator">*</span> b <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a <span class="token operator">*</span> c <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"NONE"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    ans1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>b <span class="token operator">+</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>b <span class="token operator">*</span> b <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a <span class="token operator">*</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    ans2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>b <span class="token operator">-</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>b <span class="token operator">*</span> b <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a <span class="token operator">*</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>ans1 <span class="token operator">==</span> ans2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.2lf"</span><span class="token punctuation">,</span> ans1<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.2lf %.2lf"</span><span class="token punctuation">,</span> ans1<span class="token punctuation">,</span> ans2<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h4 id="题目描述考虑虚根"><a class="anchor" href="#题目描述考虑虚根">#</a> 题目描述 (考虑虚根)</h4><p>在实数范围内求方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ax^2+bx+c=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的根。方程的系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a,b,c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span> 由用户从键盘上输入。</p><h4 id="输入输出格式-13"><a class="anchor" href="#输入输出格式-13">#</a> 输入输出格式</h4><h5 id="输入格式-12"><a class="anchor" href="#输入格式-12">#</a> 输入格式</h5><p>方程的系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a,b,c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span>（假设是整型数据）。</p><h5 id="输出格式-12"><a class="anchor" href="#输出格式-12">#</a> 输出格式</h5><p>实数范围内求方程的根，如果存在实数根，结果保留两位小数且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mn>1</mn><mo>≥</mo><mi>x</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x1 \ge x2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">x</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mord">2</span></span></span></span>。当有两个实根时，要求先输出实根<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mo>−</mo><mi>b</mi><mo>+</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>b</mi><mn>2</mn><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">x=[-b+\sqrt{(b2-4ac)}]/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">]</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span>，空格后再输出实根<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mo>−</mo><mi>b</mi><mo>−</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>b</mi><mn>2</mn><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">x=[-b-\sqrt{(b2-4ac)}]/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">]</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span>；当有两个相同的实根时，仅输出一个实根<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mo>−</mo><mi>b</mi><mo>+</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>b</mi><mn>2</mn><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">x=[-b+\sqrt{(b2-4ac)}]/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">]</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span> 或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mo>−</mo><mi>b</mi><mo>−</mo><msqrt><mrow><mo stretchy="false">(</mo><mi>b</mi><mn>2</mn><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">x=[-b-\sqrt{(b2-4ac)}]/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">]</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span> 即可；当没有实根时，输出一对共轭复根。</p><h4 id="输入输出样例-13"><a class="anchor" href="#输入输出样例-13">#</a> 输入输出样例</h4><h5 id="输入样例-1-12"><a class="anchor" href="#输入样例-1-12">#</a> 输入样例 #1</h5><pre><code>1 2 3</code></pre><h5 id="输出样例-1-12"><a class="anchor" href="#输出样例-1-12">#</a> 输出样例 #1</h5><pre><code>-1.00+1.41i -1.00-1.41i</code></pre><h4 id="题解-13"><a class="anchor" href="#题解-13">#</a> 题解</h4><blockquote><p>代码：上杉九月</p></blockquote><h5 id="思路-13"><a class="anchor" href="#思路-13">#</a> 思路</h5><ul><li>当 Δ &lt; 0 时，根为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi>b</mi><mo>±</mo><msqrt><mrow><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">Δ</mi><mo stretchy="false">)</mo><mi>i</mi></mrow></msqrt><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">(-b±\sqrt{(-Δ)i})/2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord">−</span><span class="mord">Δ</span><span class="mclose">)</span><span class="mord mathnormal">i</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span></li></ul><h5 id="ac代码-13"><a class="anchor" href="#ac代码-13">#</a> AC 代码</h5><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">double</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">double</span> ans1<span class="token punctuation">,</span> ans2<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token operator">>></span>c<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">int</span> delta <span class="token operator">=</span> b <span class="token operator">*</span> b <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a <span class="token operator">*</span> c<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>delta <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        ans1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>b<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        ans2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token operator">-</span>delta<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.2lf+%.2lfi "</span><span class="token punctuation">,</span> ans1<span class="token punctuation">,</span> ans2<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.2lf-%.2lfi"</span><span class="token punctuation">,</span> ans1<span class="token punctuation">,</span> ans2<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    ans1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>b <span class="token operator">+</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>b <span class="token operator">*</span> b <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a <span class="token operator">*</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    ans2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>b <span class="token operator">-</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>b <span class="token operator">*</span> b <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a <span class="token operator">*</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>ans1 <span class="token operator">==</span> ans2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.2lf"</span><span class="token punctuation">,</span> ans1<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%.2lf %.2lf"</span><span class="token punctuation">,</span> ans1<span class="token punctuation">,</span> ans2<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">零散的一些习题</summary>
    
    
    
    <category term="学习笔记" scheme="https://cdn.sakurasep.site/Shoka/categories/Study/"/>
    
    
    <category term="C++" scheme="https://cdn.sakurasep.site/Shoka/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>算法题刷题日记-Luogu</title>
    <link href="https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20%E6%B4%9B%E8%B0%B7%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20%E6%B4%9B%E8%B0%B7%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-02T09:00:07.000Z</published>
    <updated>2022-06-29T02:56:38.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><p>记录一下洛谷的做题详细思路，方便自己，也方便其他想要做题的同学。</p><p>为了方便访问，所有内容将在此文章更新，我会做好分类。</p><p>欢迎收藏！</p><p>如果你有对于这些题目不同的算法，欢迎在评论区与我交流。</p><h2 id="正文"><a class="anchor" href="#正文">#</a> 正文</h2><h2 id="循环结构"><a class="anchor" href="#循环结构">#</a> 循环结构</h2><h3 id="p1217-usaco15回文质数-prime-palindromes"><a class="anchor" href="#p1217-usaco15回文质数-prime-palindromes">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDEyMTc=">P1217 [USACO1.5] 回文质数 Prime Palindromes</span></h3><h4 id="题目描述"><a class="anchor" href="#题目描述">#</a> 题目描述</h4><p>因为 151 既是一个质数又是一个回文数（从左到右和从右到左是看一样的），所以 151 是回文质数。</p><p>写一个程序来找出范围 [a,b] (5 \le a &lt; b \le 100,000,000)(一亿) 间的所有回文质数。</p><h4 id="输入输出格式"><a class="anchor" href="#输入输出格式">#</a> 输入输出格式</h4><h5 id="输入格式"><a class="anchor" href="#输入格式">#</a> 输入格式</h5><p>第 1 行：二个整数 a 和 b .</p><h5 id="输出格式"><a class="anchor" href="#输出格式">#</a> 输出格式</h5><p>输出一个回文质数的列表，一行一个。</p><h4 id="输入输出样例"><a class="anchor" href="#输入输出样例">#</a> 输入输出样例</h4><h5 id="输入样例-1"><a class="anchor" href="#输入样例-1">#</a> 输入样例 #1</h5><pre><code>5 500</code></pre><h5 id="输出样例-1"><a class="anchor" href="#输出样例-1">#</a> 输出样例 #1</h5><pre><code>5711101131151181191313353373383</code></pre><h4 id="说明提示"><a class="anchor" href="#说明提示">#</a> 说明 / 提示</h4><p>Hint 1: Generate the palindromes and see if they are prime.</p><p>提示 1: 找出所有的回文数再判断它们是不是质数（素数）</p><p>Hint 2: Generate palindromes by combining digits properly. You might need more than one of the loops like below.</p><p>提示 2: 要产生正确的回文数，你可能需要几个像下面这样的循环。</p><p>题目翻译来自 NOCOW。</p><p>产生长度为 5 的回文数:</p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> <span class="token punctuation">(</span>d1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> d1 <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span><span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> d1<span class="token operator">+=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 只有奇数才会是素数</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     <span class="token keyword">for</span> <span class="token punctuation">(</span>d2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> d2 <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span><span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> d2<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>         <span class="token keyword">for</span> <span class="token punctuation">(</span>d3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> d3 <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span><span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> d3<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>           palindrome <span class="token operator">=</span> <span class="token number">10000</span><span class="token operator">*</span>d1 <span class="token operator">+</span> <span class="token number">1000</span><span class="token operator">*</span>d2 <span class="token operator">+</span><span class="token number">100</span><span class="token operator">*</span>d3 <span class="token operator">+</span> <span class="token number">10</span><span class="token operator">*</span>d2 <span class="token operator">+</span> d1<span class="token punctuation">;</span><span class="token comment">//(处理回文数...)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>     <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre> <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h4 id="题解"><a class="anchor" href="#题解">#</a> 题解</h4><blockquote><p>代码：上杉九月</p><p>线性筛素数算法：洛谷 @学委</p><p>原理性证明：<span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvY2ljb3Mvbm90cHJpbWU=">学委的博客</span></p></blockquote><h5 id="回文数判断"><a class="anchor" href="#回文数判断">#</a> 回文数判断</h5><blockquote><p>从个位开始，倒序输出，最后与原数判断</p></blockquote><h5 id="质数判断"><a class="anchor" href="#质数判断">#</a> 质数判断</h5><blockquote><p>这里用到线性筛</p><p>关于质数<span class="exturl" data-url="aHR0cHM6Ly9zYWt1cmFzZXAuc2l0ZS9wb3N0cy8xMzI1My8=">请看</span></p></blockquote><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXN</span> <span class="token expression"><span class="token number">100000000</span></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">bool</span> Prime_Map<span class="token punctuation">[</span><span class="token number">100000001</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 创建质数地图</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">int</span> Prime<span class="token punctuation">[</span><span class="token number">1000000</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//int 数组存质数</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">int</span> cnt<span class="token punctuation">;</span><span class="token comment">// 定义一个标记，记录质数的存储下标</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">bool</span> <span class="token function">Judge_Hw</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token comment">// 回文数判断</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">int</span> x <span class="token operator">=</span> n<span class="token punctuation">;</span><span class="token comment">//n 为输入数据，x 为中介数据</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">while</span><span class="token punctuation">(</span>x<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        m <span class="token operator">=</span> m <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> x <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        x <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span> m <span class="token operator">==</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">else</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token keyword">void</span> <span class="token function">Judge_Prime</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token function">memset</span><span class="token punctuation">(</span>Prime_Map<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>Prime_Map<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 初始化</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    Prime_Map<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>Prime_Map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            Prime<span class="token punctuation">[</span><span class="token operator">++</span>cnt<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token comment">// 如果下标 i 没有被筛选掉，存入质数数组</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> cnt <span class="token operator">&amp;&amp;</span> i <span class="token operator">*</span> Prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">)</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token comment">// 对质数倍数进行筛出</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            Prime_Map<span class="token punctuation">[</span>i <span class="token operator">*</span> Prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">%</span> Prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="44"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>    cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>b <span class="token operator">>=</span> <span class="token number">10000000</span><span class="token punctuation">)</span><span class="token comment">// 没有超过 1 千万的质数回文数，洛谷最后一个点会卡 RE</span></pre></td></tr><tr><td data-num="55"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        b <span class="token operator">=</span> <span class="token number">10000000</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>    <span class="token function">Judge_Prime</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> cnt<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">Judge_Hw</span><span class="token punctuation">(</span>Prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> Prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">>=</span> a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="62"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> Prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">记录自己在洛谷的做题记录</summary>
    
    
    
    <category term="学习笔记" scheme="https://cdn.sakurasep.site/Shoka/categories/Study/"/>
    
    
    <category term="C语言" scheme="https://cdn.sakurasep.site/Shoka/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="洛谷" scheme="https://cdn.sakurasep.site/Shoka/tags/%E6%B4%9B%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>Perfdog-简单直观的性能测试工具</title>
    <link href="https://cdn.sakurasep.site/Shoka/HowToUse/%E5%BA%94%E7%94%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%20-%20Perfdog/"/>
    <id>https://cdn.sakurasep.site/Shoka/HowToUse/%E5%BA%94%E7%94%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%20-%20Perfdog/</id>
    <published>2021-03-22T12:04:51.000Z</published>
    <updated>2022-06-29T02:49:11.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-基本介绍"><a class="anchor" href="#一-基本介绍">#</a> 一。基本介绍</h2><p>当我们作为一位消费者购买电子产品时，我们获取第一手信息的方式大多是从各大视频平台的自媒体的首发测评。当我们拿到电子产品之后，如何对它的性能进行测试呢？</p><p>有的朋友首先会想到娱乐兔，HappyMatser 等跑分软件。毕竟跑分很直观，高就是强，低就是弱。但是当跑分论成为大众的标准，厂商便会想出各种各样的方法来获取更高的跑分。例如前几天被曝光的 Realme GT 跑分作弊，还有各大厂商的跑分白名单（MIUI 检测到跑分软件运行，会将 CPU 锁在最高频率）。这样的测试只能算是极限性能，可是真正的去游戏里测试，散热设计的不同，调度优化的不同便会产生巨大的差距。</p><p>很早之前我也对手里的电子产品进行测试，当时用的是 GameBench，不过经常出问题，正版的价格更是无法接受。第二个使用的软件是快否，虽然偶尔会出现一些 bug，但是使用体验还是很不错的。不过因为这软件最后一次更新时间是 2019 年 6 月，emmm，基本是凉凉了。</p><p>去年的时候，把手里的米 9 换成了米 10，因为听说 865 的性能与功耗都平衡的很好，便产生了测试的想法。这一款由腾讯旗下 WeTest 开发的软件 Perfdog 吸引了我。支持 <code>Windows</code> ， <code>Mac OS X</code>  两个 PC 平台，可以对安卓和 iOS 设备进行测试。</p><h2 id="二-软件测试环境"><a class="anchor" href="#二-软件测试环境">#</a> 二。软件测试环境</h2><ul><li>小米 10 12G RAM MIUI12.5 21.3.12 官方包</li><li>iPad 2020 第八代 A12 iPad OS 14</li><li>Windows10 20H2</li></ul><h2 id="三-软件基本安装操作"><a class="anchor" href="#三-软件基本安装操作">#</a> 三。软件基本安装操作</h2><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9wZXJmZG9nLnFxLmNvbS8=">Perfdog 官方网站</span></p></blockquote><p>在 Perfdog 的官网下载对应平台的软件压缩包后，将压缩包解压到电脑的目录中。</p><p>在目录找到 Perfdog.exe 可执行文件，打开后显示登陆界面，这里可以注册账号或使用 QQ 扫码登陆。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/1.png" alt="登录界面" /></p><p>登录后便会进入到软件的 UI 界面</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/2.png" alt="软件UI" /></p><p>此时便可以将你的测试设备与电脑进行链接。初始化之后，在左侧的两个选项中选择测试方式（无线 or 有线 无线可以测试电池相关内容，有线可以同步显示并记录手机画面）和测试应用（支持应用名称搜索）</p><p>选择模式和设备（Windows 平台可以多开 Perfdog 并同时对多部设备测试）</p><p>右下角的加号是添加和减少测试项目。勾选左边的对号便是对此项目进行测试，点击右边的方框选择是否在软件中显示该项目的数据。</p><p>安卓设备与 iOS 设备的测试项目稍有出入</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/4.jpg" alt="安卓设备" /></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/5.jpg" alt="iOS设备" /></p><p>选择好测试应用，调整好测试项目，拿起你的设备，准备开始吧。</p><h3 id="31-软件数据解释与详细使用步骤"><a class="anchor" href="#31-软件数据解释与详细使用步骤">#</a> 3.1 软件数据解释与详细使用步骤</h3><p>建议有能力的朋友前往<span class="exturl" data-url="aHR0cHM6Ly9iYnMucGVyZmRvZy5xcS5jb20vYXJ0aWNsZS1kZXRhaWwuaHRtbD9pZD01">官网</span>去详细了解测试项目的具体作用。以下内容是我个人的解读，可能会有一些不准确的地方，还请多多指教。</p><h3 id="32-概览"><a class="anchor" href="#32-概览">#</a> 3.2 概览</h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/6.jpg" alt="基本数据" /></p><blockquote><p>性能基本指标</p></blockquote><ul><li>平均帧率 - Avg (FPS)<br /> 这一个数据对应的是整个测试过程的平均帧率，可以粗略的反应游戏的流畅程度。</li><li>卡顿次数 / 每 10 分钟 - Jank (/10min)</li><li>严重卡顿次数 / 每 10 分钟 - BigJank (/10min)</li></ul><p>这里放出 perfdog 官方给出的计算思路和计算方式</p><h4 id="321-perfdog-jank-计算思路"><a class="anchor" href="#321-perfdog-jank-计算思路">#</a> 3.2.1 PerfDog Jank 计算思路：</h4><blockquote><p>考虑视觉惯性，假设以前三帧的平均帧耗时为参考，作为 vsync 时间间隔，连续两次 vsync 没有新渲染画面刷新，则认为是一次潜在卡顿，也就是说下一帧耗时大于前三帧平均帧耗时 2 倍，则认为一次潜在卡顿。同时单帧耗时满足大于两倍电影帧耗时 1000ms/24x2 (由于人眼低于 24 帧才能辨别画面不连续性)，则认为是一次真正卡顿。同时若单帧耗时大于 3 倍电影帧耗时，则认为是一次严重卡顿。</p></blockquote><h4 id="322-perfdog-jank计算方法"><a class="anchor" href="#322-perfdog-jank计算方法">#</a> 3.2.2 PerfDog Jank 计算方法：</h4><blockquote><p>同时满足两条件，则认为是一次卡顿 Jank.<br />①Display FrameTime &gt; 前三帧平均耗时 2 倍。<br />②Display FrameTime &gt; 两帧电影帧耗时 (1000ms/24x2≈83.33ms)。<br />同时满足两条件，则认为是一次严重卡顿 BigJank.<br />①Display FrameTime &gt; 前三帧平均耗时 2 倍。<br />②Display FrameTime &gt; 三帧电影帧耗时 (1000ms/24x3=125ms)。</p></blockquote><blockquote><p>其他内容</p></blockquote><ul><li>未规范化应用 CPU 利用率 - Avg (AppCPU)[%]<br /> 这里未规范化 CPU 利用率的计算方式 = CPU 执行时间 / CPU 总时间。如果使用这一项利用率计算 APP 的性能消耗，会出现在低频运行时和高频运行时 CPU 利用率相同的情况。<br />所以 Perfdog 官方建议使用规范化 CPU 利用率。</li><li>CPU 平均温度 - Avg (CTemp)[°C]</li><li>规范化应用 CPU 利用率 - Avg (AppCPU)[%] Normalized<br /> 这种 CPU 利用率的计算方法将 CPU 的频率考虑进去。<br />CPU Usage (Normalized)= (CPU 执行时间 / CPU 总时间) * (当前时刻所有 CPU 频率之和 / 所有 CPU 频率最大值之和)<br /> 这种计算方法可以更真实的反映出 APP 的性能消耗。</li><li>最大内存占用 - Peak (Memory)[MB]</li><li>平均上传速度 - Avg (Send)[KB/s]</li><li>平均下载速度 - Avg (Recv)[KB/s]</li><li>平均功耗 - Avg (Power)[mW]</li></ul><h3 id="33-fps"><a class="anchor" href="#33-fps">#</a> 3.3 FPS</h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/7.jpg" alt="FPS测试数据" /></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/8.jpg" alt="帧率图表" /></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/9.jpg" alt="Frame Time" /></p><blockquote><p>测试项目解释</p></blockquote><ul><li><p>平均帧率 - Avg (FPS)<br /> 这一个数据对应的是整个测试过程的平均帧率，可以粗略的反应游戏的流畅程度</p></li><li><p>帧率方差 - Var (FPS)<br /> 这一个数据反映的是帧率的波动大小</p></li><li><p>大于等于某一帧率的测试数据百分比 - FPS&gt;=30 [%] FPS&gt;=45 [%]<br /> 这一数据显示可以修改，在右下角，可以看数据的大致分布</p></li><li><p>降帧次数 - Drop (FPS)[/h]<br /> 平均每小时两个相邻的 FPS 点相差大于 8 帧的次数，反映的是画面的流畅程度</p></li><li><p>卡顿次数 / 每 10 分钟 - Jank (/10min)</p></li><li><p>严重卡顿次数 / 每 10 分钟 - BigJank (/10min)</p></li><li><p>卡顿率 - Stutter [%]<br /> 计算方式 卡顿率 = 卡顿时长 / 总时长</p></li><li><p>平均单帧渲染时间 - Avg (FTime)[ms]<br /> 这一个数据可以结合第三张图 Frame Time 分析<br />如果 Frame Time 时长在某一个点很大幅度超过平均单帧渲染时间，那么大概率是一次卡顿</p></li><li><p>单帧渲染时间超过 100ms - FTime&gt;=100ms [%]<br /> 单帧渲染时间过长，很有可能导致屏幕没有内容可以刷新，所以画面不动，即为卡顿</p></li><li><p>增量耗时 - Delta (FTime)&gt;100ms [/h]</p></li></ul><h3 id="34-cpu"><a class="anchor" href="#34-cpu">#</a> 3.4 CPU</h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/10.jpg" alt="CPU测试数据" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/11.jpg" alt="CPU总体使用率" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/12.jpg" alt="CPU核心使用率" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/13.jpg" alt="CPU时钟频率" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/14.jpg" alt="CPU温度" /></p><blockquote><p>测试项目解释</p></blockquote><ul><li>未规范化应用 CPU 利用率 - Avg (AppCPU)[%]<br /> 这里未规范化 CPU 利用率的计算方式 = CPU 执行时间 / CPU 总时间。如果使用这一项利用率计算 APP 的性能消耗，会出现在低频运行时和高频运行时 CPU 利用率相同的情况。</li></ul><p>所以 Perfdog 官方建议使用规范化 CPU 利用率。</p><ul><li><p>未规范化应用 CPU 利用率小于等于 50%/70% - AppCPU&lt;=50%[%] AppCPU&lt;=70%[%]</p></li><li><p>未规范化总的 CPU 利用率 - Avg (TotalCPU)[%]</p></li><li><p>未规范化总的 CPU 利用率小于等于 50%/70% - TotalCPU&lt;=50%[%] TotalCPU&lt;=70%[%]</p></li><li><p>CPU 平均温度 - Avg (CTemp)[°C]<br /> 下面一排都是规范化的 CPU 指标，不多赘述</p></li><li><p>CPU 时钟频率 - CPU Clock<br /> 反映的是当前时间 CPU 各个核心的频率</p></li></ul><h3 id="35-memory"><a class="anchor" href="#35-memory">#</a> 3.5 Memory</h3><p>这部分对于性能测试的参考性不是很高。</p><p>这里 Perfdog 提醒：在极限测试情况下，例如开启游戏超高帧率，建议不要勾选收集 Memory Usage 和 Memory Detail，因为部分机型会有性能损耗。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/15.jpg" alt="内存测试数据" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/16.jpg" alt="内存使用率" /></p><h3 id="36-gpu"><a class="anchor" href="#36-gpu">#</a> 3.6 GPU</h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/17.jpg" alt="GPU测试数据" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/18.jpg" alt="GPU使用率" /></p><blockquote><p>测试项目解释</p></blockquote><ul><li><p>平均 GPU 利用率 - Avg (GUsage)[%]<br /> 反映的是应用是否可以充分利用 GPU 性能</p></li><li><p>平均 CPU 时钟频率 - Avg (GClock)[MHz]<br /> 反映的是应用的负载压力</p></li></ul><h3 id="37-network"><a class="anchor" href="#37-network">#</a> 3.7 Network</h3><p>这一部分对于非实时对战游戏参考性不是很高。测试王者荣耀等对网络要求较高的游戏可以进行关注。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/19.jpg" alt="网络测试数据" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/20.jpg" alt="网络收发数据" /></p><h3 id="38-battery"><a class="anchor" href="#38-battery">#</a> 3.8 Battery</h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/21.jpg" alt="电池测试数据" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/22.jpg" alt="电池测试图表" /></p><blockquote><p>测试项目解释</p></blockquote><ul><li><p>平均功耗 - Avg (Power)[mW]<br /> 在一定程度上反映了当前手机的功耗</p></li><li><p>耗电量 - Sum (Battery)[mWh]<br /> 手机在运行测试期间所消耗的电量</p></li><li><p>平均电压 - Avg (Voltage)[mV]</p></li><li><p>平均电流 - Avg (Current)[mA]</p></li></ul><h3 id="39-energy-usage"><a class="anchor" href="#39-energy-usage">#</a> 3.9 Energy Usage</h3><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/23.jpg" alt="能耗数据" /></p><p>监控应用使用的能耗情况，可以监控 CPU，GPU，网络模块，定位模块等等</p><h3 id="310-需要关注的数据"><a class="anchor" href="#310-需要关注的数据">#</a> 3.10 需要关注的数据</h3><p>对于芯片的性能测试，我认为主要应该关注的数据项目为</p><blockquote><p>平均帧率 - Avg (FPS)<br /> 反映的是设备的游戏运行稳定性，越接近设定的游戏帧率越好。<br />帧率方差 - Var (FPS)<br /> 反映的是设备掉帧的严重程度，越小越好。<br />降帧次数 - Drop (FPS)[/h]<br /> 反映的是设备的掉帧次数（掉帧次数不等于卡顿次数），越少越好。<br />卡顿次数 / 每 10 分钟 - Jank (/10min)<br /> 反映的是人所能感知的小卡顿次数，越少越好。<br />严重卡顿次数 / 每 10 分钟 - BigJank (/10min)<br /> 反映的是人所能感知的严重卡顿次数，越少越好。<br />平均单帧渲染时间 - Avg (FTime)[ms]<br /> 反映的是设备对画面单一帧的渲染平均时间，若某一时刻对画面渲染的时间远远超过平均值，说明此时屏幕内容没有刷新，会觉得明显卡顿，单帧渲染时间越贴近平均值越好。<br />规范化的应用 CPU 利用率 - Avg (AppCPU)[%] Normalized<br /> 反映的是排除其他影响因素后应用对于 CPU 性能的消耗。<br />CPU 平均温度 - Avg (CTemp)[°C]<br /> 反映的是应用长时间运行使 CPU 升高的温度，作为温控降频的参考数据。<br />CPU 时钟频率 - CPU Clock<br /> 反映的是应用运行时 CPU 的调度情况，作为卡顿分析和功耗分析的参考数据。<br />平均 GPU 利用率 - Avg (GUsage)[%]<br /> 反映的是应用对于 GPU 的使用情况。<br />平均 CPU 时钟频率 - Avg (GClock)[MHz]<br /> 反映的是应用运行时 GPU 的调度情况，作为卡顿分析和功耗分析的参考数据。<br />平均功耗 - Avg (Power)[mW]<br /> 反映的是应用运行时的平均功耗，高中低负载在功耗这一测试项目差距较大，例如骁龙 888 在高负载可以跑到 11w 的功耗，在低负载只有 4w，续航和发热因此不同。</p></blockquote><h2 id="四-云端页面功能介绍"><a class="anchor" href="#四-云端页面功能介绍">#</a> 四。云端页面功能介绍</h2><h3 id="41-我的数据"><a class="anchor" href="#41-我的数据">#</a> 4.1 我的数据</h3><p>存放着测试结束后上传的测试结果，当测试结果较多时可以设置条件筛选数据。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/24.jpg" alt="测试记录" /></p><h3 id="42-任务数据"><a class="anchor" href="#42-任务数据">#</a> 4.2 任务数据</h3><p>Perfdog 支持创建测试任务，你可以邀请小伙伴一起进行测试，并将数据归档到任务中进行分享。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/25.jpg" alt="类似是一个组织" /></p><h3 id="43-项目"><a class="anchor" href="#43-项目">#</a> 4.3 项目</h3><p>在这里可以针对不同应用数据进行分类显示</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/26.jpg" alt="筛选条件" /></p><h3 id="44-具体数据"><a class="anchor" href="#44-具体数据">#</a> 4.4 具体数据</h3><h4 id="441-图表基本操作数据统计范围修改图标曲线显示"><a class="anchor" href="#441-图表基本操作数据统计范围修改图标曲线显示">#</a> 4.4.1 图表基本操作（数据统计范围修改，图标曲线显示）</h4><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/27.jpg" alt="图表数据修改" /></p><h4 id="442-图表拖选操作查看某一时间段的测试数据"><a class="anchor" href="#442-图表拖选操作查看某一时间段的测试数据">#</a> 4.4.2 图表拖选操作（查看某一时间段的测试数据）</h4><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/28.jpg" alt="区域数据查看" /></p><h4 id="443-点选查看卡顿具体场景"><a class="anchor" href="#443-点选查看卡顿具体场景">#</a> 4.4.3 点选查看卡顿具体场景</h4><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/29.jpg" alt="具体场景分析" /></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/30.jpg" alt="卡顿画面" /></p><h3 id="45-不同测试范例对比"><a class="anchor" href="#45-不同测试范例对比">#</a> 4.5 不同测试范例对比</h3><h4 id="451-可以添加5条测试用例"><a class="anchor" href="#451-可以添加5条测试用例">#</a> 4.5.1 可以添加 5 条测试用例</h4><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/31.jpg" alt="用例数据对比" /></p><h4 id="452-对比不同的测试用例"><a class="anchor" href="#452-对比不同的测试用例">#</a> 4.5.2 对比不同的测试用例</h4><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/PerfDog/32.jpg" alt="用例数据对比" /></p><h2 id="五-写在最后"><a class="anchor" href="#五-写在最后">#</a> 五。写在最后</h2><p>PerfDog 收费了，贵的离谱，面向的用户是各类数码 KOL，我们自己想测试，需要找别的软件了。</p><p>听说华为的测试软件不错，有时间看看，写篇文章。</p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">PerfDog已经收费，本教程不再更新</summary>
    
    
    
    <category term="应用使用指南" scheme="https://cdn.sakurasep.site/Shoka/categories/HowToUse/"/>
    
    
    <category term="PC" scheme="https://cdn.sakurasep.site/Shoka/tags/PC/"/>
    
    <category term="应用使用指南" scheme="https://cdn.sakurasep.site/Shoka/tags/%E5%BA%94%E7%94%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>存储空间隔离-还你一个干净整洁的根目录</title>
    <link href="https://cdn.sakurasep.site/Shoka/HowToUse/%E5%BA%94%E7%94%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%20-%20%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E9%9A%94%E7%A6%BB/"/>
    <id>https://cdn.sakurasep.site/Shoka/HowToUse/%E5%BA%94%E7%94%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%20-%20%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E9%9A%94%E7%A6%BB/</id>
    <published>2021-03-13T13:35:26.000Z</published>
    <updated>2022-06-29T02:53:18.794Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-前言"><a class="anchor" href="#一-前言">#</a> 一。前言</h2><h3 id="11-安卓根目录的混乱现象"><a class="anchor" href="#11-安卓根目录的混乱现象">#</a> 1.1 安卓根目录的混乱现象</h3><p>每一次打开文件管理去寻找你所想要的文件，或是在聊天软件给朋友发送文件，总会看到目录里有着大量莫名奇妙的文件夹。一是不方便找到目标文件所在，二是对于强迫症挺不舒服的。</p><blockquote><p>优化前的根目录，充斥着各种文件夹</p></blockquote><p>造成这种现象，主要是国内软件厂商不遵守开发规范导致。根据安卓规范，在  <code>Android/data/包名</code>  路径应该保存对应应用的数据文件， <code>Android/obb/包名</code> 路径应该保存对应应用的数据包文件。这两个文件夹是用户不应该去访问的，因此安卓 11 的新规范禁止系统（仅对于定制 UI）的文件管理直接访问。如果介意（例如 MIUI 的默认文件管理）访问受限，可以安装相应的旧版本。</p><h3 id="12-安卓11的新限制"><a class="anchor" href="#12-安卓11的新限制">#</a> 1.2 安卓 11 的新限制</h3><blockquote><p>如图所示，MIUI 的文件管理在一次升级中已经不在允许访问，点击前往查看将会跳转安卓原生的文件管理。</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/1.jpg" alt="不能访问Android/data" /></p><p>应用应该将自身数据保存在 Android 文件夹内部，将用户数据按照分类保存在标准文件夹，但是国内应用大部分不会遵循开发规范，便造成了安卓根目录混乱的现状。</p><h3 id="13-某些应用开发者的错误理解"><a class="anchor" href="#13-某些应用开发者的错误理解">#</a> 1.3 某些应用开发者的错误理解</h3><p>很多应用开发者为了适配安卓 11 的要求，做出了很多令人迷惑的行为。这里以腾讯的令人迷惑的操作举例。在 QQ 8.2.8 版本之后，将用户的下载文件位置从根目录更改到了 Android 文件夹内部，同时也是自身的数据文件夹。这让用户去查看自己下载的文件时十分麻烦。而且 QQ 在根目录仍然有着许多未知用途的文件夹。</p><h3 id="14-标准文件夹的示例miui"><a class="anchor" href="#14-标准文件夹的示例miui">#</a> 1.4 标准文件夹的示例（MIUI）</h3><ul><li>DCIM 保存相机拍摄的照片和视频（MIUI 在该文件夹还存储了截图和屏幕录制）</li><li>Documents 保存文档</li><li>Download 保存下载文件</li><li>Fonts 保存字体文件（MIUI 系统字体文件保存在主题文件夹中）</li><li>Movie 保存视频文件</li><li>Music 保存音频文件</li><li>Pictures 保存图片文件</li><li>等等</li></ul><p>对于不同的定制系统同时也有自己存放关键系统文件的文件夹，例如 MIUI 会在根目录建立一个 MIUI 文件夹，用来存放各种系统软件的缓存文件和数据。</p><h3 id="15-解决方案"><a class="anchor" href="#15-解决方案">#</a> 1.5 解决方案</h3><ol><li>依靠安卓大版本更新更严格的文件访问策略，强制应用使用更高的 targetAPI。</li><li>依靠定制系统完善文件访问限制功能，感觉最近 Flyme 和 MIUI 的沙盒已经有了雏形了。</li><li>依靠 Rikka 开发的存储空间隔离（原名存储重定向），这也是我写本文的目的。</li></ol><h2 id="二-安装与配置"><a class="anchor" href="#二-安装与配置">#</a> 二。安装与配置</h2><p>这款软件在酷安上即有下载，原名存储重定向，现名存储空间隔离。<br />在使用这款软件之前，你需要接受以下的要求</p><ul><li>手机已经获取了 root 权限</li><li>愿意为这款软件支付一定的费用</li><li>有耐心</li><li>可以接受某些奇奇怪怪的问题</li><li>可以主动寻找问题的解决方法</li></ul><h3 id="21-本机的使用环境为"><a class="anchor" href="#21-本机的使用环境为">#</a> 2.1 本机的使用环境为</h3><ul><li>小米 10 MIUI12.5 21.2.3 Simplicity 官改</li><li>Magsik 21.4 App 22.0</li></ul><h3 id="22-模块介绍"><a class="anchor" href="#22-模块介绍">#</a> 2.2 模块介绍</h3><p>在满足 root 的环境下，在 Magsik 模块安装页面，搜索 riru 关键字便可以看到 riru 系列模块</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/2.jpg" alt="搜索模块" /></p><p>我们这里只安装两个模块</p><blockquote><p>Riru V23.6</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/4.jpg" alt="Riru核心" /></p><blockquote><p>Riru - Enhanced mode for Storage Isolation V23.6</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/3.jpg" alt="存储空间隔离" /></p><p>这里提醒一下，如果不安装 Riru，而先去安装 Riru - Enhanced mode for Storage Isolation，将会无法安装。所以请按照顺序安装模块。</p><h3 id="23-下载软件"><a class="anchor" href="#23-下载软件">#</a> 2.3 下载软件</h3><p>在酷安搜索存储空间隔离并下载</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/6_02.jpg" alt="酷安" /></p><blockquote><p>非 Google Play 平台软件价格</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/5.jpg" alt="非Play平台" /></p><p>在 Google Play 搜索存储空间隔离并下载</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/6.jpg" alt="Play平台" /></p><p>这里我推荐从 Google Play 下载，在 Play 商店购买的该软件，使用同一个谷歌账号可以多设备使用。</p><blockquote><p>Play 平台软件价格</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/7.jpg" alt="Play平台" /></p><p>目前软件的内购验证做的很完善，如果你是在 Google Play 下载，无需登录外网，直接点击恢复购买即可。</p><h3 id="24-安装过程"><a class="anchor" href="#24-安装过程">#</a> 2.4 安装过程</h3><p>下载完成后打开软件，便显示了软件的基本介绍</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/8.jpg" alt="软件介绍" /></p><p>允许存储空间隔离获取 Root 权限，当出现提示成功时便可以进行下一步了。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/9.jpg" alt="获取Root权限" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/10.jpg" alt="正常运行" /></p><p>如果出现问题，请按照以上步骤重新安装环境。</p><p>不过有的机型的确是有兼容问题。</p><blockquote><p>到这一步，就已经安装完成了</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/11.jpg" alt="主界面" /></p><h3 id="25-备份文件"><a class="anchor" href="#25-备份文件">#</a> 2.5 备份文件</h3><p>在这里，我会提供一份自己使用，基本没有错误的配置文件，你只需要在备份与还原里还原备份文件即可开始使用。</p><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5zYWt1cmFzZXAuY2x1Yi9zL0E3RnE=">备份文件 220629 - 密码 0629 - 来自上杉九月的网盘分享</span></p><blockquote><p>本配置文件的应用可能无法包含你所使用的应用，如果你想达到近乎完美的效果，请继续看下去。<br />本配置文件有的地方会有一些问题，你需要自行修改。</p></blockquote><h2 id="三-原理解释以及详细配置"><a class="anchor" href="#三-原理解释以及详细配置">#</a> 三。原理解释以及详细配置</h2><h3 id="31-原理"><a class="anchor" href="#31-原理">#</a> 3.1 原理</h3><p>在存储空间隔离的官网，我们可以找到一些我们所需要的内容</p><p><span class="exturl" data-url="aHR0cHM6Ly9zci5yaWtrYS5hcHAvemgtaGFucy8=">官方网站</span></p><p>以下内容是对官网指南的部分摘录以及我自己的理解</p><blockquote><p>公共文件夹</p></blockquote><p>DCIM,Pictures,Download 等公共文件夹，用来保存用户的文件，允许应用在此根据需求新建文件夹来保存对应的文件。例如 QQ 应该将用户下载的文件保存在  <code>Download/QQ</code> ，而不是 <code>Android/data/包名</code> 。</p><p>但是应用对于公共文件夹的访问应该是一次性的，有目的的。例如在 QQ 发送图片给好友，QQ 在获取用户的允许后访问 DCIM 和 Pictures 文件夹，发送结束后系统应该收回访问权限。</p><blockquote><p>数据文件夹</p></blockquote><p>Android 文件夹内部对于用户来说是不应该进行访问的，对于应用来说则是无需授权就能够访问，在此保存应用的数据和缓存。</p><p>遗憾的是，目前原生安卓对于存储权限的选项只有允许和拒绝，此外，国内存在的大量 “坏应用” 如果被拒绝授权将不会运行。</p><p>存储空间隔离便是为了解决这一乱象而开发，这里感谢 Rikka 大佬开发了这款应用，在一定程度上很好解决了以上问题。</p><p>一般来说，不规范的应用会在根目录创建各种各样的文件夹。在启用存储空间隔离之后，应用将会在 <code>Android/data/包名/sdcard</code>  内保存文件。</p><p>优点如下</p><blockquote><p>因为卸载应用时只会清理应用的数据文件夹，在对应用进行隔离后，卸载时下载文件和应用数据一并删除<br />系统统计应用占用空间大小仅会统计数据文件夹，在对应用进行隔离后，系统统计大小功能将会正常工作</p></blockquote><h3 id="32-使用教程"><a class="anchor" href="#32-使用教程">#</a> 3.2 使用教程</h3><h4 id="321-软件权限"><a class="anchor" href="#321-软件权限">#</a> 3.2.1 软件权限</h4><p>对于 MIUI 用户，因为 MIUI 魔改了很多对于应用的控制权限，这里需要手动为存储空间隔离打开部分权限</p><ul><li>在后台弹出界面</li><li>应用自启动以及省电策略</li></ul><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/12.jpg" alt="后台弹出" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/13.jpg" alt="自启动" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/14.jpg" alt="后台运行" /></p><h4 id="322-默认存储空间位置"><a class="anchor" href="#322-默认存储空间位置">#</a> 3.2.2 默认存储空间位置</h4><p>在软件的设置 - 行为 - 默认隔离存储空间位置中，你有两种选择</p><ol><li>保存在数据文件夹</li><li>保存在缓存文件夹</li></ol><p>缓存文件夹有着和数据文件夹一样的特性，但是缓存文件夹可能被清理软件所清理。这里根据自己的需求吧。一般来说保存在数据文件夹即可。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/15.jpg" alt="两种选择" /></p><h4 id="323-可访问文件夹模板"><a class="anchor" href="#323-可访问文件夹模板">#</a> 3.2.3 可访问文件夹模板</h4><p>然后回到上一级，在可访问文件夹模板中进行设置<br />在这里所设置的文件夹就是允许应用访问的公共文件夹</p><p>我在默认的基础上添加了对于 Movie 文件夹的访问</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/16.jpg" alt="访问模板" /></p><p>现在回到主页面，点击应用管理，就可以对应用进行单独设置</p><p>为了避免重定向系统应用带来各种各样的 bug，我们先对第三方应用进行配置</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/17.jpg" alt="不显示系统应用" /></p><h3 id="33-根据需求配置"><a class="anchor" href="#33-根据需求配置">#</a> 3.3 根据需求配置</h3><p>白描是一款特别好用的 OCR 识别和 PDF 导出应用，这里我们拿它来讲解如何对一款应用重定向。</p><h4 id="331-需求考虑"><a class="anchor" href="#331-需求考虑">#</a> 3.3.1 需求考虑</h4><p>我们应该考虑，这款应用会获取什么信息，因为我常常用它将图片转成 PDF 格式，所以 DCIM（拍摄的图片）和 Pictures（下载的图片）是可访问的文件夹。所以说我们对白描设置可访问文件夹为 DCIM 和 Pictures。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/18.jpg" alt="白描的配置界面" /></p><h4 id="332-模拟正常使用过程"><a class="anchor" href="#332-模拟正常使用过程">#</a> 3.3.2 模拟正常使用过程</h4><p>使用白描正常导出一次 PDF，在查看文件历史里可以看到 PDF 保存在 Download/Baimiao 中。因为我希望保存在 Document / 白描，所以我们打开白描的 Download 访问权限（刚才是白描试图访问 Download，但是被定向到了数据文件夹内部的 Download），重新保存一次 PDF，这时白描就会创建此文件夹。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/19.jpg" alt="导出路径" /></p><h4 id="333-将隔离的文件同步到标准文件夹"><a class="anchor" href="#333-将隔离的文件同步到标准文件夹">#</a> 3.3.3 将隔离的文件同步到标准文件夹</h4><p>在导出被隔离的文件中添加同步文件夹规则，来源路径选择 Download（新版存储空间隔离导出时会将该应用在目录内的全部文件进行同步）</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/20.jpg" alt="编写规则" /></p><h4 id="334-检查结果"><a class="anchor" href="#334-检查结果">#</a> 3.3.4 检查结果</h4><p>可以看到 PDF 文件成功保存到指定位置</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/21.jpg" alt="同步成功" /></p><p>这里很多使用者都会有一个误区 - 既然我要把文件保存到 Documents 目录，那么为什么不把 Documents 设置为可访问的文件夹呢？其实很好解释，你把可访问的文件夹当做读取权限，把导出被隔离的文件当作写入权限，这样就明白了吧。</p><p>但是有些应用是很规范的，他们保存在标准文件夹，所以你应该允许该应用访问。</p><h3 id="34-应用之间互相访问"><a class="anchor" href="#34-应用之间互相访问">#</a> 3.4 应用之间互相访问</h3><p>用过存储重定向的老用户都应该遇到过哔哩哔哩的视频分享到 QQ，会出现系统繁忙的提示，就算偶尔可能分享成功，视频的封面也不见了。</p><p>这是因为哔哩哔哩老版本在根目录的 tv.danmuku.bili 存放自己的图片缓存，而对哔哩哔哩和 QQ 进行隔离后，QQ 是访问不到这个文件夹的，就造成了分享失败的问题。</p><p><s>目前这个问题貌似得到了解决，哔哩哔哩在某一个版本对缓存文件的位置做了更改，移动到了数据文件夹，这是一个可能的原因。此外还可能因为哔哩哔哩的分享在 QQ 上被改为了小程序分享，分享短链接包含了封面地址，所以分享成功进行。</s></p><p><s>因为目前我并没有遇到该问题，所以希望各位可以在评论区反馈你们的使用情况，我会抽时间测试一下对应的软件版本。</s></p><p>好了，最近遇到了这一问题。同时也讲一下解决方案。同类问题都可以按照此思路解决。</p><p>哔哩哔哩的视频想要分享到 QQ（空间，联系人等），QQ 需要读取哔哩哔哩的封面缓存信息，而因为存储重定向的缘故，QQ 无法对你允许访问文件夹之外的内容进行读取和写入操作，这就导致了分享的失败。所以为了解决这一问题，首先通过文件历史找到正常情况下哔哩哔哩的缓存保存位置。最新版缓存保存位置在  <code>Android/data/tv.danmaku.bili/files/Images</code>  。然后在 QQ 可访问的文件夹，在其他应用的文件夹中创建新的规则。</p><p>如下图所示。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/22.jpg" alt="解决隔离应用无法分享的问题" /></p><h3 id="四-最终的清理"><a class="anchor" href="#四-最终的清理">#</a> 四。最终的清理</h3><p>按照以上的例子，对用户应用一一设置。设置完成之后，删除除了标准文件夹的所有冗余文件，正常使用一段时间，你会发现根目录仍然会有一些文件夹，这时候就需要精准定位。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/23.jpg" alt="手动删除文件" /></p><p>如上图所示，比如说我们想知道 <code>com.miui.voiceassist</code> <s> 其实很明显，是小爱同学，但请假装不知道</s>是由哪一个应用创建。</p><p>我们将文件夹名复制，在文件监视中粘贴。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/24.jpg" alt="文件监视" /></p><p>然后就会显示有那些应用对该文件夹进行读取或者是写入。</p><p>不过我们要清楚读取和写入的区别，比如说这里显示了媒体存储设备对该文件夹的访问，而我们了解一点相关内容便可以知道个该软件是在扫描各个文件夹来查找媒体文件，并没有进行写入，所以文件夹不是由它创建。</p><p>向下拉便可以找到小爱同学的文件访问记录。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/25.jpg" alt="访问记录" /></p><p>现在点击小爱同学，对其进行隔离。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/26.jpg" alt="应用配置" /></p><h3 id="五-或许会更完美"><a class="anchor" href="#五-或许会更完美">#</a> 五。或许会更完美</h3><h4 id="51-解决下载文件被某些应用存储在android目录的问题"><a class="anchor" href="#51-解决下载文件被某些应用存储在android目录的问题">#</a> 5.1 解决下载文件被某些应用存储在 Android 目录的问题</h4><p>QQ 这类将用户下载的文件保存在数据文件夹的应用</p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY29vbGFway5jb20vZmVlZC8yNDY1NDk3OD9zaGFyZUtleT1Nekl4TTJNMFpEY3hZbUUyTmpBMFkySTNNelV+JmFtcDtzaGFyZVVpZD0zMzM0OTU3JmFtcDtzaGFyZUZyb209Y29tLmNvb2xhcGsubWFya2V0XzExLjAuMw==">酷安 @Kotch 给出了一种解决方案</span></p><p>我采用的是 Rikka 开发的另一款应用 - 保存副本</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/28.jpg" alt="酷安" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/29.jpg" alt="应用介绍" /></p><p>当你在 QQ 下载文件之后，只需要在打开方式里选择保存副本，软件就可以在 Download 目录复制一份相同的文件。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/30.jpg" alt="操作方法" /><br /><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/31.jpg" alt="复制成功" /></p><h2 id="六-效果展示"><a class="anchor" href="#六-效果展示">#</a> 六。效果展示</h2><p>这里我自己把 Malody 的谱面文件存在了 Map 文件夹。</p><p>miad 这一个空文件是为了防止 MIUI 的应用开屏广告产生（直接卸载掉智能服务 <code>com.miui.systemAdSolution</code>  即可。可以使用搞机助手进行卸载。一直用官改，不知道 MIUI 将广告服务集成在此应用里，感谢<strong>酷安 @水水水淼</strong>的建议）</p><p>mm 是 Magsik 的 MM 管理器</p><p>如果和文章开头对比一下，可以说是强迫症狂喜。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/RedirectStorage/32.jpg" alt="最终的效果" /></p><h2 id="七-写在最后"><a class="anchor" href="#七-写在最后">#</a> 七。写在最后</h2><h3 id="个人情况"><a class="anchor" href="#个人情况">#</a> 个人情况</h3><p>我在寒假里策划了很多内容，从这一篇文章开始，我会逐渐向给各位展示我策划的优质内容。</p><h3 id="新的开始"><a class="anchor" href="#新的开始">#</a> 新的开始</h3><p>这算是一个新坑，目的就是向各位推荐一些优质的应用，他们真的可以方便你的生活。目前我的更新频率（如果没有什么意外的话基本就是一个月更新两次，一次是安卓上的应用，一次是 PC 上的应用），毕竟我刚进入大学，自己安排了很多学习的内容，时间并不是很充裕，保证质量是第一位（还有要填坑）。</p><h3 id="欢迎交流"><a class="anchor" href="#欢迎交流">#</a> 欢迎交流</h3><p>这些应用对于各位来说有的可能没用过，有的可能早就熟练上手。我希望我写的图文可以帮助小白零基础上手优质应用，从而提高效率。同时期待和各路大佬交流使用心得，不断完善文章内容和呈现形式。</p><p>在这里我也会虚心听取意见，无论是对图文内容的建议，或是对某些优质应用的推荐等等。</p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">安卓系统的根目录，本不应该如此混乱。</summary>
    
    
    
    <category term="应用使用指南" scheme="https://cdn.sakurasep.site/Shoka/categories/HowToUse/"/>
    
    
    <category term="应用使用指南" scheme="https://cdn.sakurasep.site/Shoka/tags/%E5%BA%94%E7%94%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    
    <category term="安卓" scheme="https://cdn.sakurasep.site/Shoka/tags/%E5%AE%89%E5%8D%93/"/>
    
  </entry>
  
  <entry>
    <title>智慧曲园云端自动打卡</title>
    <link href="https://cdn.sakurasep.site/Shoka/HowToDo/%E9%9B%B6%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%20-%20%E6%99%BA%E6%85%A7%E6%9B%B2%E5%9B%AD%E4%BA%91%E7%AB%AF%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1/"/>
    <id>https://cdn.sakurasep.site/Shoka/HowToDo/%E9%9B%B6%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%20-%20%E6%99%BA%E6%85%A7%E6%9B%B2%E5%9B%AD%E4%BA%91%E7%AB%AF%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1/</id>
    <published>2021-01-20T13:27:35.000Z</published>
    <updated>2022-06-27T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><p>班群没事就 <code>@全体成员</code> ，用 FilterBox 过滤通知 + 自动签到，总算把这烦人的东西解决了。</p><h2 id="正文"><a class="anchor" href="#正文">#</a> 正文</h2><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BvbG9zZWMvcWZudUF1dG9UZW1wZXJhdHVyZVN1Ym1pdA==">Github:qfnuAutoTemperatureSubmit - 智慧曲园自动签到</span></p></blockquote><h3 id="一-软件环境"><a class="anchor" href="#一-软件环境">#</a> 一。软件环境</h3><ul><li>云服务器（使用宝塔面板）</li><li>Python3</li></ul><h3 id="二-开始配置"><a class="anchor" href="#二-开始配置">#</a> 二。开始配置</h3><h4 id="21-保存脚本文件"><a class="anchor" href="#21-保存脚本文件">#</a> 2.1 保存脚本文件</h4><p>在合适的位置保存脚本文件</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Qfnu/1.jpg" alt="保存文件" /></p><h4 id="221-对python脚本进行单独配置"><a class="anchor" href="#221-对python脚本进行单独配置">#</a> 2.2.1 对 python 脚本进行单独配置</h4><p>如图所示是我们宿舍四人的 python 脚本</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Qfnu/2.jpg" alt="脚本文件" /></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Qfnu/3.jpg" alt="详细配置" /></p><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>python3 <span class="token operator">/</span>www<span class="token operator">/</span>wwwroot<span class="token operator">/</span>qfnuAutoTemperatureSubmit<span class="token operator">/</span>xxx<span class="token punctuation">.</span>py</pre></td></tr></table></figure><blockquote><p>python3 命令是你没有设置系统变量时使用的，如果你将 python3 作为系统环境，这里只需要改成 python</p></blockquote><p>使用宝塔计划任务创建定时任务</p><blockquote><p>当时不太懂云服务器的目录结构，放在了 wwwroot 网站目录</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Qfnu/4.jpg" alt="定时执行" /></p><h4 id="222-使用原python文件"><a class="anchor" href="#222-使用原python文件">#</a> 2.2.2 使用原 python 文件</h4><p>直接将脚本文件放在文件夹内</p><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>python3 <span class="token operator">/</span>www<span class="token operator">/</span>wwwroot<span class="token operator">/</span>qfnuAutoTemperatureSubmit<span class="token operator">/</span>demo1<span class="token punctuation">.</span>py 学号 密码</pre></td></tr></table></figure><h4 id="23-注意事项"><a class="anchor" href="#23-注意事项">#</a> 2.3 注意事项</h4><p>执行 python 脚本报错的话</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Qfnu/5.png" alt="作者回复" /></p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">使用Python脚本自动打卡智慧曲园</summary>
    
    
    
    <category term="零基础教程" scheme="https://cdn.sakurasep.site/Shoka/categories/HowToDo/"/>
    
    
    <category term="零基础" scheme="https://cdn.sakurasep.site/Shoka/tags/%E9%9B%B6%E5%9F%BA%E7%A1%80/"/>
    
    <category term="云服务器" scheme="https://cdn.sakurasep.site/Shoka/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="Python" scheme="https://cdn.sakurasep.site/Shoka/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>我的2020年度总结</title>
    <link href="https://cdn.sakurasep.site/Shoka/Year/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%20-%202020%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>https://cdn.sakurasep.site/Shoka/Year/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%20-%202020%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-19T13:52:06.000Z</published>
    <updated>2022-06-29T03:06:55.323Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><p>咕咕咕了好久的 2020 年度总结终于来啦！</p><p>～～才不是因为我懒～～</p><p>本文中所有内容截止于 2021.1.1 日</p><p>未来，一定更精彩！</p><h2 id="第一阶段-高三下学期-高考"><a class="anchor" href="#第一阶段-高三下学期-高考">#</a> 第一阶段 高三下学期 -- 高考</h2><p>紧张的学习生活，每天基本都是两点一线的路线。</p><p>枯燥的学习生活，在最后的高考 100 天尤为如此，从周考到天天做不完的卷子。</p><p>温暖的学习生活，在向着理想的大学奋斗的路上，感谢每一位同学的陪伴，感谢老班的悉心辅导，感谢每一位老师的辛苦付出，满满的回忆。</p><p>终究有一个好结果。</p><p>下一个人生阶段，在曲师大度过。</p><h2 id="第二阶段-暑假"><a class="anchor" href="#第二阶段-暑假">#</a> 第二阶段 暑假</h2><p>放下了高三的压力，暑假便成为了我尽情发挥的舞台。</p><h3 id="1-第一台自己组装的主机"><a class="anchor" href="#1-第一台自己组装的主机">#</a> 1. 第一台自己组装的主机</h3><p>个人算是一个果粉吧。于是在进行配件选购的时候，并没有选择热门的 AMD + N 卡的组合，而是为了方便黑苹果的安装，选择了 Intel + A 卡的组合。</p><p>配置如下</p><pre><code>CPU：Intel i5-9600K GPU：AMD RX5700 XT内存：Kingston 骇客神条 3200MHz 8G x 2固态：Western Digital SN750 500GB x 2机械：TOSHIBA P300 3T主板：MSI Z390 Gaming Puls电源：Segotep 600W散热：玄冰400机箱：SAHARA 逆行者606显示器：AOC 23.8英寸 24G2 1080P144无线网卡：BCM943602CS</code></pre><p>总体感觉还行吧，组装完成之后做了一个用 OC 引导的 win10 和 macOS 的双系统，这台电脑便是我暑假的主力机器。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2020/1.png" alt="电脑配置" /></p><p>关于 macOS Catalina 10.15.6 的 EFI 文件，我是参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnhqbjgxOS5jb20="> Xjn´s Blog</span> 进行自己配置和调试，截止到文章书写的 2021.1.18 日，一切运行正常</p><p>关于 macOS 与其他苹果设备的联动，我个人用的是 iPad mini2 (网课专用板)。为了当前稳定的 Wi-Fi 链接和蓝牙功能 (最初我是用的是 USB 网卡，不稳定，需要驱动支持)，我入手了 BCM943602CS 这一款 PCIE 网卡。</p><p>从同学那里借来 iPad Pro 2020 做了一下测试，随航，接力，隔空投送都很完美。</p><blockquote><p>macOS 镜像下载：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmRhbGlhbnNreS5uZXQ=">黑果小兵的部落阁</span></p></blockquote><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5zYWt1cmFzZXAuY2x1Yi9zL2c1SUE=">本机 EFI 下载 - 来自上杉九月的网盘分享</span></p></blockquote><p>这里建议对于 macOS 或是苹果全家桶生态有着需求的，不要考虑黑苹果主机，黑苹果在稳定性和方便程度都不如白苹果，而且，M1 的 MacBook 好香！</p><h3 id="2-第一台个人笔记本"><a class="anchor" href="#2-第一台个人笔记本">#</a> 2. 第一台个人笔记本</h3><p>去上大学，当然不可以搬着一个 MATX 机箱去。<br />所以入手了一台 R7000P (首发价格)</p><blockquote><p>用了两年，看到当年的我说 AMD YES，我真想穿越回去，告诉当年的我，Intel YES。</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2020/2.png" alt="电脑配置" /></p><p>桌面如图</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2020/3.jpg" alt="我的桌面" /></p><p>用了仿 macOS 的软件，还不错，基本的动画实现了，UI 设计也挺不错的，但是经常出现崩溃。</p><p>正版 macOS</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2020/4.png" alt="正版macOS桌面" /></p><p>因为大学是软件工程专业，笔记本上搭建了 python2，，python3，java，c 等众多环境</p><h3 id="3-小米9-小米10"><a class="anchor" href="#3-小米9-小米10">#</a> 3. 小米 9 -- 小米 10</h3><blockquote><p>2022 年了 865 还是顶，4750 的电池还是比较大，90Hz 的屏幕还是舒服，完全没有换手机的欲望。而且手机对我个人来说就是休闲小游戏加联系工具，下一次换手机估计换个 Redmi Note 了。</p></blockquote><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2020/6.jpg" alt="我的手机" /></p><h3 id="4-sony-zv-1"><a class="anchor" href="#4-sony-zv-1">#</a> 4. Sony ZV-1</h3><blockquote><p>2022 年了，还在吃灰。。。。</p></blockquote><h2 id="第三阶段-初步迈入大学生活"><a class="anchor" href="#第三阶段-初步迈入大学生活">#</a> 第三阶段 初步迈入大学生活</h2><h3 id="1-chevereto图片站"><a class="anchor" href="#1-chevereto图片站">#</a> 1. Chevereto 图片站</h3><p>通过自己搭建图床，学到了不少关于云服务器的知识 (之前搭建 Wordpress 博客接触过)。</p><blockquote><h4 id="上杉九月的图片站"><a class="anchor" href="#上杉九月的图片站">#</a> 上杉九月的图片站</h4></blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9waWMuc2FrdXJhc2VwLnRvcC8=">上杉九月的图片站</span></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2020/7.png" alt="图片站" /></p><p>搭建教程已经出了</p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlL3Bvc3RzL2NoZXZlcmV0by8=">搭建教程</span></p><h3 id="2-hexo"><a class="anchor" href="#2-hexo">#</a> 2. Hexo</h3><blockquote><h4 id="上杉九月的博客"><a class="anchor" href="#上杉九月的博客">#</a> 上杉九月的博客</h4></blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNha3VyYXNlcC5zaXRlLw==">上杉九月的博客</span></p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/My2020/8.png" alt="博客首页" /></p><h3 id="3-云服务器"><a class="anchor" href="#3-云服务器">#</a> 3. 云服务器</h3><p>云服务器定时执行 python 脚本</p><blockquote><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BvbG9zZWMvcWZudUF1dG9UZW1wZXJhdHVyZVN1Ym1pdA==">python 脚本原地址</span></p></blockquote><h3 id="4-初接触ctf"><a class="anchor" href="#4-初接触ctf">#</a> 4. 初接触 CTF</h3><p>想作为一个兴趣爱好，寒假继续学习。</p><h2 id="总结"><a class="anchor" href="#总结">#</a> 总结</h2><p>2020 年经历了人生大考，虽然有很多波折，但也是顺利的度过了。</p><p>在 2020 年我个人多是在实践应用投入了精力，2021 年我将会在原理以及应用的代码实现付出。</p><p>目标就是有事情做，写写教程，平平安安就是理想啦。</p><p>2020 年真的是魔幻的一年，疫情迅速席卷全球，中国顶着巨大压力成功遏制，没想到（应该是意料之中），自由的西方资本主义国家没能遏制疫情传播，天灾人祸，诸如此类。</p><p>2021 年一定会好起来的，提前在这祝福各位新年快乐，事事顺利，一切安好。</p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">回顾一下我的2020</summary>
    
    
    
    <category term="年度总结" scheme="https://cdn.sakurasep.site/Shoka/categories/Year/"/>
    
    
    <category term="年度总结" scheme="https://cdn.sakurasep.site/Shoka/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Chevereto-属于你自己的图片站</title>
    <link href="https://cdn.sakurasep.site/Shoka/HowToDo/%E9%9B%B6%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%20-%20Chevereto%E5%9B%BE%E5%BA%8A/"/>
    <id>https://cdn.sakurasep.site/Shoka/HowToDo/%E9%9B%B6%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%20-%20Chevereto%E5%9B%BE%E5%BA%8A/</id>
    <published>2020-12-25T12:20:23.000Z</published>
    <updated>2022-06-27T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="anchor" href="#前言">#</a> 前言</h2><p>前几天用 hexo 搭建博客首页的时候，想给网站来一张高清的壁纸。然后用 picgo 把一张比较大的图片上传到 gitee。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/1.png" alt="Picgo" /></p><p>这时出现了第一个问题，picgo 不显示该图片的缩略图</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/2.png" alt="无法显示缩略图" /></p><p>本来以为是 picgo 的 bug（beta3 版本），便用手机上的图床软件上传</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/3.png" alt="上传完成" /></p><p>显示上传成功，打开 gitee 的仓库也可以正常访问</p><p>在感到很疑惑的同时，我将该图片的 URL 发到了群里，让朋友看看能不能访问</p><p>然后我收到了朋友的截图</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/4.png" alt="Gitee限制图片大小" /></p><blockquote><p>Gitee 图床存在的问题</p></blockquote><ol><li>不能上传超过 1M 大小的图片，否则不能显示</li><li>Gitee 有段时间开启了防盗链，第三方引用全部失效</li></ol><p>这时候我在图床 APP 的其他图床中看到了一段对于 chevereto 图床的描述</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/5.png" alt="试试？" /></p><p>粗略的看了一下教程，实现效果还不错。</p><p><span class="exturl" data-url="aHR0cHM6Ly9waWMuc2FrdXJhc2VwLnRvcC8=">上杉九月的图片站 - Chevereto</span></p><h2 id="一-方案总结"><a class="anchor" href="#一-方案总结">#</a> 一。方案总结</h2><ul><li>方案一：神枫云 + FTP 外部存储</li><li>方案二：域名 + 轻量应用服务器</li><li>方案三：备案域名 + ECS 服务器</li></ul><p>我个人最推荐方案二</p><p>学生优惠或者新用户购买腾讯云或者阿里云的服务器挺便宜的，大概是一年 60 左右。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/6.png" alt="腾讯云" /></p><p>当然我之前介绍的神枫云也可以，而且可以省去配置宝塔面板的步骤</p><h2 id="二-方案实施"><a class="anchor" href="#二-方案实施">#</a> 二。方案实施</h2><h3 id="21-方案一神枫云-ftp外部存储"><a class="anchor" href="#21-方案一神枫云-ftp外部存储">#</a> 2.1 方案一：神枫云 + FTP 外部存储</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc2Z4eXVuLmNuLw==">神枫云首页</span></p><h4 id="211-神枫云服务器配置"><a class="anchor" href="#211-神枫云服务器配置">#</a> 2.1.1 神枫云服务器配置</h4><p>建议购买这个 3RMB / 月的服务器</p><p>相比于 1RMB / 月的，月流量变为无限是很重要的</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/7.png" alt="服务器" /></p><p>稍微配置一下，进入主机的管理界面，进入在线文件管理</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/8.png" alt="管理面板" /></p><h4 id="212-安装前的准备"><a class="anchor" href="#212-安装前的准备">#</a> 2.1.2 安装前的准备</h4><p>上传 chevereto 底包到根目录</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/9.png" alt="chevereto" /></p><p>这里 chevereto 有免费版和付费版，我们使用付费版来进行搭建，因为付费版才可以使用外部存储，神枫云只提供了 300M 的数据库，存不了几张图片</p><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5zYWt1cmFzZXAuY2x1Yi9zLzhZQ00=">chevereto 免费版 - Cloudreve - 密码 0628</span><br /><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC5zYWt1cmFzZXAuY2x1Yi9zL0dKVTA=">chevereto 收费版 - Cloudreve - 密码 0628</span></p><p>然后解压底包到 wwwroot 文件夹</p><p>此时 wwwroot 文件夹内应该是下图所示的目录结构</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/16.png" alt="目录结构" /></p><p>解压完成之后，进入域名绑定选项，这里有一个赠送的域名</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/13.png" alt="默认域名" /></p><h4 id="213-开始安装"><a class="anchor" href="#213-开始安装">#</a> 2.1.3 开始安装</h4><p>访问该域名进入安装进程，只修改三项</p><p>如果忘记了可以在面板首页 - 虚拟主机信息找到</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/14.png" alt="连接数据库" /></p><p>然后是注册管理员的界面</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/25.png" alt="填写信息" /></p><p>顺利安装完成</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/26.png" alt="安装完成" /></p><p>如果一切顺利的话现在网站已经跳转到了 chevereto 图床的首页</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/17.png" alt="首页展示" /></p><p>点击右上角的登录，把刚刚注册的管理员账号输入进去，然后进入仪表盘，到这里整个安装过程基本结束了。</p><p>不过因为神枫云的数据库空间很小，只有 300M，根本存不了几张图片，所以下文的外部存储功能便十分重要。</p><h3 id="22-域名-腾讯云轻量服务器"><a class="anchor" href="#22-域名-腾讯云轻量服务器">#</a> 2.2 域名 + 腾讯云轻量服务器</h3><h4 id="221-安装宝塔镜像"><a class="anchor" href="#221-安装宝塔镜像">#</a> 2.2.1 安装宝塔镜像</h4><p>首先去腾讯云购买一个轻量应用服务器，并且选择香港地区来免去备案，镜像选择宝塔面板</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/10.png" alt="选择宝塔镜像" /></p><p>然后来到服务器的控制台，在防火墙里添加 8888 端口来允许宝塔面板的访问，后续可以更改默认访问端口，并添加安全入口提高安全性。</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/11.png" alt="放行端口" /></p><p>在应用管理里面可以获取默认宝塔面板的登录密码</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/12.png" alt="访问密码" /></p><p>后期记得修改宝塔面板的登录端口以及默认用户名和密码</p><p>登录实例，可以选择网页直接登录，上图右下角，先复制命令，然后点击登录</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/17.png" alt="远程登录" /></p><h4 id="222-软件环境"><a class="anchor" href="#222-软件环境">#</a> 2.2.2 软件环境</h4><p>进入宝塔面板，在软件商店里安装（仅搭建图床）</p><ul><li>Nginx 1.16</li><li>php 7.3</li><li>MySQL 5.6</li><li>phpMyadmin 4.9</li></ul><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/27.jpg" alt="软件列表" /></p><h4 id="223-创建站点"><a class="anchor" href="#223-创建站点">#</a> 2.2.3 创建站点</h4><p>然后在侧边栏找到网站，添加站点</p><p>填入你购买的域名，创建数据库</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/19.png" alt="基本信息" /></p><p>然后在站点的设置里添加伪静态代码</p><pre><code>location / &#123;    index index.php;    try_files $uri $uri/ /index.php?$query_string;&#125;</code></pre><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/20.png" alt="伪静态" /></p><h4 id="224-dns解析"><a class="anchor" href="#224-dns解析">#</a> 2.2.4 DNS 解析</h4><p>然后在你申请域名的服务商添加 DNS 解析</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/21.png" alt="DNS解析" /></p><blockquote><p>主机记录 @ 记录类型 A 解析线路默认 记录值是 IP 地址 TTL 10 分钟</p></blockquote><p>稍微等上一段时间，就可以用域名访问你的 chevereto 图床进行安装了</p><h4 id="225-安装过程"><a class="anchor" href="#225-安装过程">#</a> 2.2.5 安装过程</h4><p>访问该域名进入安装进程</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/14.png" alt="连接数据库" /></p><p>然后是注册管理员的界面</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/25.png" alt="填写信息" /></p><p>顺利安装完成</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/26.png" alt="安装完成" /></p><p>如果一切顺利的话现在网站已经跳转到了 chevereto 图床的首页</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/17.png" alt="首页展示" /></p><p>点击右上角的登录，把刚刚注册的管理员账号输入进去，然后进入仪表盘，到这里整个安装过程基本结束了。</p><p>如果你使用的是这种方式，那么一般来说数据库就有了一定的存储空间，例如我个人使用的就有约 45G 的数据空间</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/22.png" alt="存储空间" /></p><p>这样的话存一些个人的图片还是没有问题的</p><h3 id="23-备案域名-阿里云ecs服务器"><a class="anchor" href="#23-备案域名-阿里云ecs服务器">#</a> 2.3 备案域名 + 阿里云 ECS 服务器</h3><p>这里 ECS 服务器我购买的是学生优惠版本</p><p>这里虽然显示最少购买 6 个月，其实可以在调整配置的时候可以买一个月先试试</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/33.jpg" alt="价格" /></p><p>这里仅需要修改购买时长，操作系统等会去更换</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/34.jpg" alt="购买界面" /></p><p>购买完成后去阿里云 ECS 控制台，将实例停止运行以更换操作系统和购买云盘容量</p><p>注意：云盘容量按需购买，因为服务器的云盘是按月付费</p><h4 id="231-更换镜像"><a class="anchor" href="#231-更换镜像">#</a> 2.3.1 更换镜像</h4><p>在镜像市场将操作系统更换为宝塔 linux 面板</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/35.jpg" alt="更换镜像" /></p><p>自定义实例登录密码，一会要用到</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/36.jpg" alt="修改登录密码" /></p><h4 id="232-登录服务器"><a class="anchor" href="#232-登录服务器">#</a> 2.3.2 登录服务器</h4><p>在实例管理界面，进行远程登录</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/37.jpg" alt="远程登录" /></p><p>选择第一项网页登录</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/38.jpg" alt="远程登录" /></p><p>输入 &quot;bt default&quot; 来获取宝塔面板的默认登录密码</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/40.jpg" alt="获取默认密码" /></p><p>记得放行安全组端口 8888，然后用 <code>公网IP:8888</code>  访问宝塔面板</p><h4 id="233-软件环境"><a class="anchor" href="#233-软件环境">#</a> 2.3.3 软件环境</h4><p>进入宝塔面板，在软件商店里安装（仅搭建图床）</p><ul><li>Nginx 1.16</li><li>php 7.3</li><li>MySQL 5.6</li><li>phpMyadmin 4.9</li></ul><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/27.jpg" alt="软件列表" /></p><h4 id="234-创建站点"><a class="anchor" href="#234-创建站点">#</a> 2.3.4 创建站点</h4><p>然后在侧边栏找到网站，添加站点</p><p>填入你购买的域名，创建数据库</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/19.png" alt="基本信息" /></p><p>然后在站点的设置里添加伪静态代码</p><pre><code>location / &#123;    index index.php;    try_files $uri $uri/ /index.php?$query_string;&#125;</code></pre><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/20.png" alt="伪静态" /></p><h4 id="235-dns解析"><a class="anchor" href="#235-dns解析">#</a> 2.3.5 DNS 解析</h4><p>然后在你申请域名的服务商添加 DNS 解析</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/21.png" alt="DNS解析" /></p><blockquote><p>主机记录 @ 记录类型 A 解析线路默认 记录值是 IP 地址 TTL 10 分钟</p></blockquote><p>稍微等上一段时间，就可以用域名访问你的 chevereto 图床进行安装了</p><h4 id="236-安装过程"><a class="anchor" href="#236-安装过程">#</a> 2.3.6 安装过程</h4><p>访问该域名进入安装进程</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/14.png" alt="连接数据库" /></p><p>然后是注册管理员的界面</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/25.png" alt="填写信息" /></p><p>顺利安装完成</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/26.png" alt="安装完成" /></p><p>如果一切顺利的话现在网站已经跳转到了 chevereto 图床的首页</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/17.png" alt="首页展示" /></p><p>点击右上角的登录，把刚刚注册的管理员账号输入进去，然后进入仪表盘，到这里整个安装过程基本结束了。</p><h2 id="三-为域名添加https访问"><a class="anchor" href="#三-为域名添加https访问">#</a> 三。为域名添加 Https 访问</h2><p>打开你所购买域名服务商的控制台（这里以阿里云为例子）</p><p>在域名控制台 - 基本信息 - SSL 证书</p><p>用免费版就可以</p><p>填写一些必要的信息，审核通过后下载证书</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/41.jpg" alt="获取证书" /></p><p>这里因为我们云服务器安装的是 Nginx，所以下载该类型</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/42.jpg" alt="下载证书" /></p><p>然后解压缩得到两个文件，一个 key，一个 pem，现在登录宝塔面板，复制证书密钥和内容到网站 - 设置 - SSL - 其他证书</p><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/Chevereto/43.jpg" alt="设置证书" /></p><p>保存后你的域名就可以使用 https 访问了</p><h2 id="四-chevereto图床基本设置"><a class="anchor" href="#四-chevereto图床基本设置">#</a> 四. chevereto 图床基本设置</h2><h3 id="41-网站"><a class="anchor" href="#41-网站">#</a> 4.1 网站</h3><ul><li>网站名称</li><li>网站标题</li><li>网站描述</li><li>默认时区</li><li>网站运营模式</li><li>网站隐私模式</li></ul><h3 id="42-用户"><a class="anchor" href="#42-用户">#</a> 4.2 用户</h3><ul><li>开放注册</li></ul><h3 id="43-图片上传"><a class="anchor" href="#43-图片上传">#</a> 4.3 图片上传</h3><ul><li>最大文件大小</li><li>缩略图大小</li><li>中等图片大小</li><li>水印</li></ul><h3 id="44-主页"><a class="anchor" href="#44-主页">#</a> 4.4 主页</h3><ul><li>样式</li><li>封面图片</li><li>标题</li><li>段落</li></ul><h3 id="45-电子邮件"><a class="anchor" href="#45-电子邮件">#</a> 4.5 电子邮件</h3><ul><li>发送名称</li><li>发件人的电子邮件地址</li><li>电子邮件地址</li></ul><h3 id="46-防洪保护"><a class="anchor" href="#46-防洪保护">#</a> 4.6 防洪保护</h3><ul><li>防洪保护</li><li>以电子邮件通知</li><li>每分钟限额</li><li>每小时限额</li><li>每日限额</li></ul><h2 id="五-总结"><a class="anchor" href="#五-总结">#</a> 五。总结</h2><p>chevereto 图床作为一个图片站来说还是很不错的，用来存放一些高清图片（壁纸，美图）等还是很不错的。不过搭建 chevereto 是需要一定的成本的，如果预算不是很多建议去找一些其他的公益图床。</p><p><s>如果平时只是写写文章的话，我还是推荐使用 gitee 图床，上传之前记得用格式工厂压缩一下图片，压缩成 JPG 格式，可以极大程度避免图片过大的问题</s></p><p>Gitee 图床审查变得严格起来，出现了很多误封现象，这里建议使用 <code>Github仓库 + jsDelivr</code> 。</p><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">Chevereto算是一个集图床功能与图片展示为一体的项目，同时还提供了注册功能，如果你的服务器带宽允许，你可以邀请小伙伴为你的图片站扩充资源！</summary>
    
    
    
    <category term="零基础教程" scheme="https://cdn.sakurasep.site/Shoka/categories/HowToDo/"/>
    
    
    <category term="零基础" scheme="https://cdn.sakurasep.site/Shoka/tags/%E9%9B%B6%E5%9F%BA%E7%A1%80/"/>
    
    <category term="云服务器" scheme="https://cdn.sakurasep.site/Shoka/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="图床" scheme="https://cdn.sakurasep.site/Shoka/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>《算法学习笔记》</title>
    <link href="https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://cdn.sakurasep.site/Shoka/Study/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-12-22T11:26:54.000Z</published>
    <updated>2022-06-29T02:58:02.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="普通判断法"><a class="anchor" href="#普通判断法">#</a> 普通判断法</h2><h3 id="代码实现"><a class="anchor" href="#代码实现">#</a> 代码实现</h3><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXN</span> <span class="token expression"><span class="token number">10000000</span></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">int</span> pr<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">void</span> <span class="token function">Prime</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">int</span> temp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">%</span> j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                temp<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            pr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">int</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    cin<span class="token operator">>></span>num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    </pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>pr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span>i<span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="埃拉托斯特尼筛法"><a class="anchor" href="#埃拉托斯特尼筛法">#</a> 埃拉托斯特尼筛法</h2><h3 id="定义"><a class="anchor" href="#定义">#</a> 定义</h3><p>埃拉托斯特尼筛法，简称埃氏筛或爱氏筛，是一种由希腊数学家埃拉托斯特尼所提出的一种简单检定素数的算法。要得到自然数 n 以内的全部素数，必须把不大于根号 n 的所有素数的倍数剔除，剩下的就是素数。</p><h3 id="图片演示"><a class="anchor" href="#图片演示">#</a> 图片演示</h3><p><img data-src="https://fastly.jsdelivr.net/gh/sakurasep/images@1.4/stduy/idea/1.gif" alt="" /></p><h3 id="代码实现-2"><a class="anchor" href="#代码实现-2">#</a> 代码实现</h3><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXN</span> <span class="token expression"><span class="token number">10000000</span></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">int</span> prime<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">void</span> <span class="token function">FindNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> num<span class="token punctuation">;</span> j <span class="token operator">+=</span> i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>                prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">int</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    cin<span class="token operator">>></span>num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token function">FindNum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    </pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            cout<span class="token operator">&lt;&lt;</span>i<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="线性筛"><a class="anchor" href="#线性筛">#</a> 线性筛</h2><h3 id="原理"><a class="anchor" href="#原理">#</a> 原理</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvY2ljb3Mvbm90cHJpbWU=">洛谷用户 @学委的原理性证明</span></p><h3 id="代码实现-3"><a class="anchor" href="#代码实现-3">#</a> 代码实现</h3><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXN</span> <span class="token expression"><span class="token number">1000000</span></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">int</span> prime<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">bool</span> check<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> temp<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">void</span> <span class="token function">FindNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>check<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            prime<span class="token punctuation">[</span><span class="token operator">++</span>temp<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> temp <span class="token operator">&amp;&amp;</span> i <span class="token operator">*</span> prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> num<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            check<span class="token punctuation">[</span>i <span class="token operator">*</span> prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">%</span> prime<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                <span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>             <span class="token punctuation">&#125;</span> </pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token keyword">int</span> num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    cin<span class="token operator">>></span>num<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token function">FindNum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> temp<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        cout<span class="token operator">&lt;&lt;</span>prime<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><hr /><p><img data-src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/5199/about_me.png" alt="关注上杉九月，关注上杉九月谢谢喵！" /></p>]]></content>
    
    
    <summary type="html">最新内容--质数筛选法</summary>
    
    
    
    <category term="学习笔记" scheme="https://cdn.sakurasep.site/Shoka/categories/Study/"/>
    
    
    <category term="C语言" scheme="https://cdn.sakurasep.site/Shoka/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="算法" scheme="https://cdn.sakurasep.site/Shoka/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
